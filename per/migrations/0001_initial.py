# Generated by Django 4.2.16 on 2024-10-08 07:30

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models

import per.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("api", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("deployments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AreaResponse",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssessmentType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                ("name_en", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_es", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_fr", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_ar", models.CharField(max_length=200, null=True, verbose_name="name")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Assessment Type",
                "verbose_name_plural": "PER Assessment Types",
            },
        ),
        migrations.CreateModel(
            name="CustomPerWorkPlanComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("actions", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_en", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_es", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_fr", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_ar", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("due_date", models.DateField(blank=True, null=True, verbose_name="Due date")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Not Started"), (1, "Ongoing"), (2, "Delayed"), (3, "Standby"), (4, "Finished")],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "supported_by_organization_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "UN Organization"), (1, "Private Sector"), (2, "Government"), (3, "National Society")],
                        null=True,
                        verbose_name="Supported By Organization Type",
                    ),
                ),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "supported_by",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="api.country"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("comment", models.TextField(blank=True, null=True, verbose_name="comment")),
            ],
            options={
                "verbose_name": "Form",
                "verbose_name_plural": "Forms",
                "ordering": ("area", "created_at"),
            },
        ),
        migrations.CreateModel(
            name="FormAnswer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.CharField(max_length=40, verbose_name="text")),
                ("text_en", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_es", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_fr", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_ar", models.CharField(max_length=40, null=True, verbose_name="text")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="FormArea",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("area_num", models.IntegerField(default=1, verbose_name="area number")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("component_num", models.IntegerField(default=1, verbose_name="component number")),
                ("component_letter", models.CharField(blank=True, max_length=3, null=True, verbose_name="component letter")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_en", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_es", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_fr", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_ar", models.TextField(blank=True, null=True, verbose_name="description")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high_performance", "High Performance"),
                            ("exists_could_be_strengthened", "Exists – Could be Strengthened"),
                            ("needs_improvement", "Needs Improvement"),
                            ("partially_exists", "Partially Exists"),
                            ("does_not_exist", "Does Not Exist"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                ("is_parent", models.BooleanField(blank=True, null=True, verbose_name="Is parent")),
                ("has_question_group", models.BooleanField(blank=True, null=True, verbose_name="Has Question Group")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                ("area", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="per.formarea", verbose_name="area")),
            ],
        ),
        migrations.CreateModel(
            name="FormComponentQuestionAndAnswer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("notes", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_en", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_es", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_fr", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_ar", models.TextField(blank=True, null=True, verbose_name="notes")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="per.formanswer",
                        verbose_name="answer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrganizationTypes",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated Organization type?")),
                ("order", models.SmallIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Organization type",
                "verbose_name_plural": "Organization types",
            },
        ),
        migrations.CreateModel(
            name="Overview",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("date_of_orientation", models.DateField(blank=True, null=True, verbose_name="Date of Orientation")),
                ("assessment_number", models.IntegerField(default=1, verbose_name="assessment number")),
                ("branches_involved", models.CharField(blank=True, max_length=400, null=True, verbose_name="branches involved")),
                ("date_of_assessment", models.DateField(blank=True, null=True, verbose_name="date of assessment")),
                (
                    "assessment_method",
                    models.CharField(
                        blank=True,
                        choices=[("per", "PER"), ("drce", "DRCE"), ("wpns", "WPNS")],
                        max_length=90,
                        null=True,
                        verbose_name="what method has this assessment used",
                    ),
                ),
                (
                    "assess_preparedness_of_country",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Do you want to assess the preparedness of your National Society for epidemics and pandemics?",
                    ),
                ),
                (
                    "assess_urban_aspect_of_country",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Do you want to assess the urban aspects of your National Society?"
                    ),
                ),
                (
                    "assess_climate_environment_of_country",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Do you want to assess the climate and environment of your National Society?",
                    ),
                ),
                (
                    "date_of_previous_assessment",
                    models.DateField(blank=True, null=True, verbose_name="Date of previous assessment"),
                ),
                ("workplan_development_date", models.DateField(blank=True, null=True, verbose_name="Workplan Development Date")),
                ("workplan_revision_date", models.DateField(blank=True, null=True, verbose_name="Workplan Revision Date")),
                ("facilitator_name", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator name")),
                ("facilitator_email", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator email")),
                ("facilitator_phone", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator phone")),
                (
                    "facilitator_contact",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator other contacts"),
                ),
                (
                    "ns_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point name"),
                ),
                (
                    "ns_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point email"),
                ),
                (
                    "ns_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point phone"),
                ),
                (
                    "partner_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point name"),
                ),
                (
                    "partner_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point email"),
                ),
                (
                    "partner_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point phone"),
                ),
                (
                    "partner_focal_point_organization",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point organization name"),
                ),
                (
                    "ns_second_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point name"),
                ),
                (
                    "ns_second_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point email"),
                ),
                (
                    "ns_second_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point phone"),
                ),
                (
                    "phase",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Orientation"),
                            (2, "Assessment"),
                            (3, "Prioritisation"),
                            (4, "WorkPlan"),
                            (5, "Action And Accountability"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="phase",
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="per_overviews",
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER General Overview",
                "verbose_name_plural": "PER General Overviews",
                "ordering": ("country",),
            },
        ),
        migrations.CreateModel(
            name="PerComponentRating",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("value", models.IntegerField(verbose_name="value")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkPlan",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "prioritization",
                    models.IntegerField(
                        choices=[(0, "low"), (1, "medium"), (2, "high")], default=0, verbose_name="prioritization"
                    ),
                ),
                ("components", models.CharField(blank=True, max_length=900, null=True, verbose_name="components")),
                ("benchmark", models.CharField(blank=True, max_length=900, null=True, verbose_name="benchmark")),
                ("actions", models.CharField(blank=True, max_length=900, null=True, verbose_name="actions")),
                ("comments", models.CharField(blank=True, max_length=900, null=True, verbose_name="comments")),
                ("timeline", models.DateTimeField(verbose_name="timeline")),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "standby"),
                            (1, "ongoing"),
                            (2, "cancelled"),
                            (3, "delayed"),
                            (4, "pending"),
                            (5, "need improvements"),
                            (6, "finished"),
                            (7, "approved"),
                            (8, "closed"),
                        ],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                ("support_required", models.BooleanField(default=False, verbose_name="support required")),
                ("focal_point", models.CharField(blank=True, max_length=90, null=True, verbose_name="focal point")),
                ("code", models.CharField(blank=True, max_length=10, null=True, verbose_name="code")),
                ("question_id", models.CharField(blank=True, max_length=10, null=True, verbose_name="question id")),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Work Plan",
                "verbose_name_plural": "PER Work Plans",
                "ordering": ("prioritization", "country"),
            },
        ),
        migrations.CreateModel(
            name="PerWorkPlanComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("actions", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_en", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_es", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_fr", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("actions_ar", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("due_date", models.DateField(blank=True, null=True, verbose_name="Due date")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Not Started"), (1, "Ongoing"), (2, "Delayed"), (3, "Standby"), (4, "Finished")],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "supported_by_organization_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "UN Organization"), (1, "Private Sector"), (2, "Government"), (3, "National Society")],
                        null=True,
                        verbose_name="Supported By Organization Type",
                    ),
                ),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="Component"
                    ),
                ),
                (
                    "supported_by",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="api.country"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerWorkPlan",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
                (
                    "additional_action_responses",
                    models.ManyToManyField(
                        blank=True, to="per.customperworkplancomponent", verbose_name="Custom Per-WorkPlan Component"
                    ),
                ),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                (
                    "prioritized_action_responses",
                    models.ManyToManyField(blank=True, to="per.perworkplancomponent", verbose_name="WorkPlan Component"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerFile",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="per/images/", verbose_name="file")),
                ("caption", models.CharField(blank=True, max_length=225, null=True)),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created_by",
                    ),
                ),
            ],
            options={
                "verbose_name": "per file",
                "verbose_name_plural": "per files",
            },
        ),
        migrations.CreateModel(
            name="PerDocumentUpload",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="per/documents/", verbose_name="file")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "country",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.country", verbose_name="country"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created_by",
                    ),
                ),
                (
                    "per",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="per.overview", verbose_name="Per"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerAssessment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                ("area_responses", models.ManyToManyField(blank=True, to="per.arearesponse", verbose_name="Area Response")),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="overview",
            name="orientation_documents",
            field=models.ManyToManyField(blank=True, to="per.perfile", verbose_name="orientation documents"),
        ),
        migrations.AddField(
            model_name="overview",
            name="type_of_assessment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="type_of_assessment",
                to="per.assessmenttype",
                verbose_name="type of assessment",
            ),
        ),
        migrations.AddField(
            model_name="overview",
            name="type_of_previous_assessment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="type_of_previous_assessment",
                to="per.assessmenttype",
                verbose_name="type of previous assessment",
            ),
        ),
        migrations.AddField(
            model_name="overview",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.CreateModel(
            name="OpsLearning",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("learning", models.TextField(blank=True, null=True, verbose_name="learning")),
                ("learning_validated", models.TextField(blank=True, null=True, verbose_name="learning (validated)")),
                ("appeal_document_id", models.IntegerField(blank=True, null=True, verbose_name="Appeal document ID")),
                ("type", models.IntegerField(choices=[(1, "Lesson learned"), (2, "Challenge")], default=1, verbose_name="type")),
                (
                    "type_validated",
                    models.IntegerField(
                        choices=[(1, "Lesson learned"), (2, "Challenge")], default=1, verbose_name="type (validated)"
                    ),
                ),
                ("is_validated", models.BooleanField(default=False, verbose_name="is validated?")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified_at")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "appeal_code",
                    models.ForeignKey(
                        blank=True,
                        db_column="appeal_code",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.appeal",
                        to_field="code",
                        verbose_name="appeal (MDR) code",
                    ),
                ),
                (
                    "organization",
                    models.ManyToManyField(
                        blank=True, related_name="organizations", to="per.organizationtypes", verbose_name="Organizations"
                    ),
                ),
                (
                    "organization_validated",
                    models.ManyToManyField(
                        blank=True,
                        related_name="validated_organizations",
                        to="per.organizationtypes",
                        verbose_name="Organizations (validated)",
                    ),
                ),
                (
                    "per_component",
                    models.ManyToManyField(
                        blank=True, related_name="components", to="per.formcomponent", verbose_name="PER Components"
                    ),
                ),
                (
                    "per_component_validated",
                    models.ManyToManyField(
                        blank=True,
                        related_name="validated_components",
                        to="per.formcomponent",
                        verbose_name="PER Components (validated)",
                    ),
                ),
                (
                    "sector",
                    models.ManyToManyField(
                        blank=True, related_name="sectors", to="deployments.sectortag", verbose_name="Sectors"
                    ),
                ),
                (
                    "sector_validated",
                    models.ManyToManyField(
                        blank=True,
                        related_name="validated_sectors",
                        to="deployments.sectortag",
                        verbose_name="Sectors (validated)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Operational Learning",
                "verbose_name_plural": "Operational Learnings",
                "ordering": ("learning",),
            },
        ),
        migrations.CreateModel(
            name="NSPhase",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "phase",
                    models.IntegerField(
                        choices=[
                            (0, "baseline"),
                            (1, "orientation"),
                            (2, "assessment"),
                            (3, "prioritization"),
                            (4, "plan of action"),
                            (5, "action and accountability"),
                        ],
                        default=0,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("country", models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to="api.country")),
            ],
            options={
                "verbose_name": "NS PER Process Phase",
                "verbose_name_plural": "NS-es PER Process Phase",
                "ordering": ("updated_at", "country"),
            },
        ),
        migrations.CreateModel(
            name="NiceDocument",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "document",
                    models.FileField(blank=True, null=True, upload_to=per.models.nice_document_path, verbose_name="document"),
                ),
                ("document_url", models.URLField(blank=True, verbose_name="document url")),
                (
                    "visibility",
                    models.IntegerField(choices=[(0, "hidden"), (1, "visible")], default=1, verbose_name="visibility"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="perdoc_country",
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Document",
                "verbose_name_plural": "PER Documents",
                "ordering": ("visibility", "country"),
            },
        ),
        migrations.CreateModel(
            name="FormQuestionGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_en", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_es", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_fr", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_ar", models.TextField(blank=True, null=True, verbose_name="description")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="per.formcomponent", verbose_name="component"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormQuestion",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("question", models.CharField(max_length=500, verbose_name="question")),
                ("question_en", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_es", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_fr", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_ar", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("description", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_en", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_es", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_fr", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_ar", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("question_num", models.IntegerField(blank=True, null=True, verbose_name="question number")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                ("answers", models.ManyToManyField(blank=True, to="per.formanswer", verbose_name="answers")),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="per.formcomponent", verbose_name="component"
                    ),
                ),
                (
                    "question_group",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="per.formquestiongroup"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormPrioritizationComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_prioritized", models.BooleanField(blank=True, null=True, verbose_name="Is prioritized")),
                ("justification_text", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                ("justification_text_en", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                ("justification_text_es", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                ("justification_text_fr", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                ("justification_text_ar", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="component"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormPrioritization",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                (
                    "prioritized_action_responses",
                    models.ManyToManyField(
                        blank=True, to="per.formprioritizationcomponent", verbose_name="Form prioritization component"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormData",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("notes", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_en", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_es", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_fr", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_ar", models.TextField(blank=True, null=True, verbose_name="notes")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="form_data", to="per.form", verbose_name="form"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="per.formquestion", verbose_name="question"
                    ),
                ),
                (
                    "selected_answer",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="per.formanswer", verbose_name="answer"
                    ),
                ),
            ],
            options={
                "verbose_name": "Form Data",
                "verbose_name_plural": "Form Data",
                "ordering": ("form", "question__question_num"),
            },
        ),
        migrations.CreateModel(
            name="FormComponentResponse",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("urban_considerations", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("urban_considerations_en", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("urban_considerations_es", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("urban_considerations_fr", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("urban_considerations_ar", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("epi_considerations", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                ("epi_considerations_en", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                ("epi_considerations_es", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                ("epi_considerations_fr", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                ("epi_considerations_ar", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                (
                    "climate_environmental_considerations",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
                (
                    "climate_environmental_considerations_en",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
                (
                    "climate_environmental_considerations_es",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
                (
                    "climate_environmental_considerations_fr",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
                (
                    "climate_environmental_considerations_ar",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
                ("notes", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("notes_en", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("notes_es", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("notes_fr", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("notes_ar", models.TextField(blank=True, null=True, verbose_name="Notes")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="Form Component"
                    ),
                ),
                (
                    "question_responses",
                    models.ManyToManyField(
                        blank=True, to="per.formcomponentquestionandanswer", verbose_name="Question responses"
                    ),
                ),
                (
                    "rating",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="per.percomponentrating"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="per.formquestion",
                verbose_name="question",
            ),
        ),
        migrations.AddField(
            model_name="formcomponent",
            name="question_responses",
            field=models.ManyToManyField(blank=True, to="per.formcomponentquestionandanswer", verbose_name="Question responses"),
        ),
        migrations.AddField(
            model_name="form",
            name="area",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="per.formarea", verbose_name="area"
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="overview",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forms",
                to="per.overview",
                verbose_name="overview",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.AddField(
            model_name="arearesponse",
            name="area",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="per.formarea", verbose_name="Area"),
        ),
        migrations.AddField(
            model_name="arearesponse",
            name="component_response",
            field=models.ManyToManyField(blank=True, to="per.formcomponentresponse", verbose_name="Component Response"),
        ),
    ]
