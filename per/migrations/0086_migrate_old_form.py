# Generated by Django 3.2.20 on 2023-09-27 05:07

from django.db import migrations


class Migration(migrations.Migration):

    def migrate_data(apps, schema_editor):
        Form = apps.get_model('per', 'Form')
        FormData = apps.get_model('per', 'FormData')
        FormComponentQuestionAndAnswer = apps.get_model('per', 'FormComponentQuestionAndAnswer')
        FormComponent = apps.get_model('per', 'FormComponent')
        FormComponentResponse = apps.get_model('per', 'FormComponentResponse')
        AreaResponse = apps.get_model('per', 'AreaResponse')
        PerAssessment = apps.get_model('per', 'PerAssessment')

        per_assessments_by_overview = {}

        for form in Form.objects.all():
            overview = form.overview
            per_assessment = per_assessments_by_overview.get(overview.id)

            if not per_assessment:
                per_assessment = PerAssessment.objects.create(
                    overview=overview,
                    user=form.user,
                    is_draft=True,
                )

                per_assessments_by_overview[overview.id] = per_assessment

            area = form.area
            area_response = AreaResponse.objects.create(area=form.area)
            per_assessment.area_responses.add(area_response)

            for component_response in area.formcomponent_set.all():
                form_component_response = FormComponentResponse.objects.create(
                    component=component_response,
                )
                area_response.component_response.add(form_component_response)

                form_data_entries = FormData.objects.filter(
                    form=form,
                    question__component=component_response
                )

                for form_data_entry in form_data_entries:
                    question_and_answer = FormComponentQuestionAndAnswer.objects.create(
                        question=form_data_entry.question,
                        answer=form_data_entry.selected_answer,
                        notes=form_data_entry.notes
                    )
                    form_component_response.question_responses.add(question_and_answer)

    dependencies = [
        ('per', '0085_alter_overview_assessment_method'),
    ]

    operations = [
        migrations.RunPython(
            migrate_data,
            reverse_code=migrations.RunPython.noop
        ),
    ]
