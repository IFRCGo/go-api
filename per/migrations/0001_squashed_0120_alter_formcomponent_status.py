# Generated by Django 4.2.15 on 2024-09-13 15:17

import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.conf import settings
from django.db import migrations, models

import per.models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# per.migrations.0086_migrate_old_form
# per.migrations.0087_update_phase
# per.migrations.0088_update_assessment_method
# per.migrations.0090_auto_20231030_1505
# per.migrations.0094_update_supported_by_organization_type
# per.migrations.0096_migrate_formdata_notes
# per.migrations.0098_auto_20240118_0552
# per.migrations.0098_fix_reversion_data_20240208_0502
# per.migrations.0099_migrate_notes
# per.migrations.0100_auto_20240130_0851
# per.migrations.0100_migrate_all_notes
# per.migrations.0106_auto_20240314_1059
# per.migrations.0108_auto_20240320_0801
# per.migrations.0109_auto_20240320_0804
# per.migrations.0110_auto_20240325_0611
# per.migrations.0112_auto_20240426_0522


class Migration(migrations.Migration):

    replaces = [
        ("per", "0001_initial"),
        ("per", "0002_form_ns"),
        ("per", "0003_auto_20190416_1021"),
        ("per", "0004_auto_20190520_1436"),
        ("per", "0005_auto_20190603_1703"),
        ("per", "0006_draft"),
        ("per", "0007_nsphase"),
        ("per", "0008_erureadiness"),
        ("per", "0009_auto_20190709_0835"),
        ("per", "0010_workplan"),
        ("per", "0011_auto_20190711_0757"),
        ("per", "0012_auto_20190711_0859"),
        ("per", "0013_remove_workplan_form"),
        ("per", "0014_overview"),
        ("per", "0015_auto_20190711_1236"),
        ("per", "0016_auto_20190711_1305"),
        ("per", "0017_nicedocument"),
        ("per", "0018_draft_country"),
        ("per", "0019_auto_20190716_1422"),
        ("per", "0020_auto_20200618_0904"),
        ("per", "0021_auto_20200903_0843"),
        ("per", "0022_auto_20201012_1225"),
        ("per", "0023_auto_20201012_1241"),
        ("per", "0024_formcomponent_component_letter"),
        ("per", "0025_auto_20201028_1606"),
        ("per", "0026_auto_20201029_0851"),
        ("per", "0027_auto_20201030_1539"),
        ("per", "0028_auto_20201102_1154"),
        ("per", "0029_auto_20201105_1529"),
        ("per", "0030_auto_20201106_1205"),
        ("per", "0031_auto_20201106_1222"),
        ("per", "0032_remove_form_country"),
        ("per", "0033_auto_20201116_1521"),
        ("per", "0034_auto_20201119_1502"),
        ("per", "0035_overview_assessment_number"),
        ("per", "0036_auto_20201123_1055"),
        ("per", "0037_formquestion_description"),
        ("per", "0038_auto_20201130_1417"),
        ("per", "0039_auto_20201208_1348"),
        ("per", "0040_auto_20201214_1255"),
        ("per", "0041_auto_20230417_0402"),
        ("per", "0042_auto_20230502_0611"),
        ("per", "0043_auto_20230505_0826"),
        ("per", "0044_auto_20230508_0535"),
        ("per", "0045_auto_20230508_0839"),
        ("per", "0046_form_is_draft"),
        ("per", "0047_auto_20230510_0527"),
        ("per", "0048_auto_20230608_0615"),
        ("per", "0049_auto_20230608_0621"),
        ("per", "0050_alter_perassessment_overview"),
        ("per", "0051_rename_area_response_perassessment_area_responses"),
        ("per", "0052_auto_20230608_0837"),
        ("per", "0053_auto_20230608_0919"),
        ("per", "0054_auto_20230608_1022"),
        ("per", "0055_auto_20230609_0516"),
        ("per", "0056_perfile"),
        ("per", "0057_remove_overview_orientation_document"),
        ("per", "0058_overview_orientation_document"),
        ("per", "0059_auto_20230614_0820"),
        ("per", "0060_perassessment_is_draft"),
        ("per", "0061_overview_phase"),
        ("per", "0062_alter_overview_phase"),
        ("per", "0063_perworkplancomponent_supported_by"),
        ("per", "0064_overview_is_draft"),
        ("per", "0065_rename_status_formcomponentresponse_rating"),
        ("per", "0066_remove_formcomponentresponse_rating"),
        ("per", "0067_auto_20230621_1003"),
        ("per", "0068_auto_20230622_0420"),
        ("per", "0069_auto_20230622_0426"),
        ("per", "0070_auto_20230622_0531"),
        ("per", "0071_remove_arearesponse_is_draft"),
        ("per", "0072_remove_overview_orientation_document"),
        ("per", "0073_overview_orientation_documents"),
        ("per", "0074_auto_20230628_0541"),
        ("per", "0075_auto_20230628_0552"),
        ("per", "0041_auto_20230410_0720"),
        ("per", "0076_merge_0041_auto_20230410_0720_0075_auto_20230628_0552"),
        ("per", "0077_alter_formanswer_options"),
        ("per", "0078_auto_20230711_0938"),
        ("per", "0079_auto_20230712_0627"),
        ("per", "0080_formcomponentresponse_notes"),
        ("per", "0081_auto_20230731_1426"),
        ("per", "0082_auto_20230822_0833"),
        ("per", "0083_auto_20230828_0403"),
        ("per", "0084_alter_overview_date_of_assessment"),
        ("per", "0085_alter_overview_assessment_method"),
        ("per", "0086_migrate_old_form"),
        ("per", "0087_update_phase"),
        ("per", "0088_update_assessment_method"),
        ("per", "0089_alter_overview_type_of_previous_assessment"),
        ("per", "0090_auto_20231030_1505"),
        ("per", "0091_opslearning"),
        ("per", "0092_auto_20240109_1950"),
        ("per", "0093_perworkplancomponent_supported_by_organization_type"),
        ("per", "0094_update_supported_by_organization_type"),
        ("per", "0095_perdocumentupload"),
        ("per", "0096_migrate_formdata_notes"),
        ("per", "0097_formcomponent_is_parent"),
        ("per", "0098_auto_20240118_0552"),
        ("per", "0099_auto_20240130_0850"),
        ("per", "0100_auto_20240130_0851"),
        ("per", "0093_auto_20240116_1739"),
        ("per", "0094_auto_20240116_1845"),
        ("per", "0095_opslearning_appeal_document_id"),
        ("per", "0096_alter_opslearning_appeal_code"),
        ("per", "0097_alter_opslearning_appeal_code"),
        ("per", "0101_merge_20240202_1004"),
        ("per", "0098_fix_reversion_data_20240208_0502"),
        ("per", "0102_merge_20240216_0447"),
        ("per", "0099_migrate_notes"),
        ("per", "0100_migrate_all_notes"),
        ("per", "0103_merge_0100_migrate_all_notes_0102_merge_20240216_0447"),
        ("per", "0104_alter_overview_phase"),
        ("per", "0105_formcomponent_has_question_group"),
        ("per", "0106_auto_20240314_1059"),
        ("per", "0107_customperworkplancomponent_supported_by_organization_type"),
        ("per", "0108_auto_20240320_0801"),
        ("per", "0109_auto_20240320_0804"),
        ("per", "0110_auto_20240325_0611"),
        ("per", "0111_perdocumentupload_per"),
        ("per", "0112_auto_20240426_0522"),
        ("per", "0113_auto_20240521_0611"),
        ("per", "0114_auto_20240521_0801"),
        ("per", "0115_auto_20240521_0813"),
        ("per", "0116_auto_20240521_0815"),
        ("per", "0117_auto_20240522_0529"),
        ("per", "0118_percomponentrating_title_ar_and_more"),
        ("per", "0118_customperworkplancomponent_actions_ar_and_more"),
        ("per", "0119_merge_20240524_0548"),
        ("per", "0120_alter_formcomponent_status"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0020_auto_20190703_0614"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("api", "0019_auto_20190626_1420"),
        ("deployments", "0088_alter_project_visibility"),
        ("api", "0017_auto_20190424_1508"),
        ("api", "0187_auto_20231218_0508"),
        ("api", "0188_auto_20240109_0508"),
        ("reversion", "0001_squashed_0004_auto_20160611_1202"),
        ("api", "0169_auto_20230425_1120"),
    ]

    operations = [
        migrations.CreateModel(
            name="NSPhase",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "phase",
                    models.IntegerField(
                        choices=[
                            (0, "baseline"),
                            (1, "orientation"),
                            (2, "assessment"),
                            (3, "prioritization"),
                            (4, "plan of action"),
                            (5, "action and accountability"),
                        ],
                        default=0,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("country", models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to="api.country")),
            ],
            options={
                "verbose_name": "NS PER Process Phase",
                "verbose_name_plural": "NS-es PER Process Phase",
                "ordering": ("updated_at", "country"),
            },
        ),
        migrations.CreateModel(
            name="WorkPlan",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "prioritization",
                    models.IntegerField(
                        choices=[(0, "low"), (1, "medium"), (2, "high")], default=0, verbose_name="prioritization"
                    ),
                ),
                ("components", models.CharField(blank=True, max_length=900, null=True, verbose_name="components")),
                ("benchmark", models.CharField(blank=True, max_length=900, null=True, verbose_name="benchmark")),
                ("actions", models.CharField(blank=True, max_length=900, null=True, verbose_name="actions")),
                ("comments", models.CharField(blank=True, max_length=900, null=True, verbose_name="comments")),
                ("timeline", models.DateTimeField(verbose_name="timeline")),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "standby"),
                            (1, "ongoing"),
                            (2, "cancelled"),
                            (3, "delayed"),
                            (4, "pending"),
                            (5, "need improvements"),
                            (6, "finished"),
                            (7, "approved"),
                            (8, "closed"),
                        ],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                ("support_required", models.BooleanField(default=False, verbose_name="support required")),
                ("focal_point", models.CharField(blank=True, max_length=90, null=True, verbose_name="focal point")),
                ("code", models.CharField(blank=True, max_length=10, null=True, verbose_name="code")),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
                ("question_id", models.CharField(blank=True, max_length=10, null=True, verbose_name="question id")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Work Plan",
                "verbose_name_plural": "PER Work Plans",
                "ordering": ("prioritization", "country"),
            },
        ),
        migrations.CreateModel(
            name="NiceDocument",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "document",
                    models.FileField(blank=True, null=True, upload_to=per.models.nice_document_path, verbose_name="document"),
                ),
                ("document_url", models.URLField(blank=True, verbose_name="document url")),
                (
                    "visibility",
                    models.IntegerField(choices=[(0, "hidden"), (1, "visible")], default=1, verbose_name="visibility"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="perdoc_country",
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Document",
                "verbose_name_plural": "PER Documents",
                "ordering": ("visibility", "country"),
            },
        ),
        migrations.CreateModel(
            name="FormAnswer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.CharField(max_length=40, verbose_name="text")),
                ("text_ar", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_en", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_es", models.CharField(max_length=40, null=True, verbose_name="text")),
                ("text_fr", models.CharField(max_length=40, null=True, verbose_name="text")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="FormArea",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("area_num", models.IntegerField(default=1, verbose_name="area number")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("component_num", models.IntegerField(default=1, verbose_name="component number")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("area", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="per.formarea", verbose_name="area")),
                ("component_letter", models.CharField(blank=True, max_length=3, null=True, verbose_name="component letter")),
                ("description_ar", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_en", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_es", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_fr", models.TextField(blank=True, null=True, verbose_name="description")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high_performance", "High Performance"),
                            ("exists_could_be_strengthened", "Exits Could be Strengthened"),
                            ("needs_improvement", "Needs Improvement"),
                            ("partially_exists", "Partially Exists"),
                            ("does_not_exist", "Does Not Exist"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="status",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormQuestion",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("question", models.CharField(max_length=500, verbose_name="question")),
                ("question_num", models.IntegerField(blank=True, null=True, verbose_name="question number")),
                ("answers", models.ManyToManyField(blank=True, to="per.formanswer", verbose_name="answers")),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="per.formcomponent", verbose_name="component"
                    ),
                ),
                ("question_ar", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_en", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_es", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("question_fr", models.CharField(max_length=500, null=True, verbose_name="question")),
                ("description", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_ar", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_en", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_es", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                ("description_fr", tinymce.models.HTMLField(blank=True, null=True, verbose_name="description")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssessmentType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                ("name_ar", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_en", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_es", models.CharField(max_length=200, null=True, verbose_name="name")),
                ("name_fr", models.CharField(max_length=200, null=True, verbose_name="name")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "PER Assessment Type",
                "verbose_name_plural": "PER Assessment Types",
            },
        ),
        migrations.CreateModel(
            name="Overview",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("facilitator_email", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator email")),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="per_overviews",
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name="created at"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("branches_involved", models.CharField(blank=True, max_length=400, null=True, verbose_name="branches involved")),
                ("date_of_assessment", models.DateField(verbose_name="date of assessment")),
                (
                    "facilitator_contact",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator other contacts"),
                ),
                ("facilitator_name", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator name")),
                ("facilitator_phone", models.CharField(blank=True, max_length=90, null=True, verbose_name="facilitator phone")),
                (
                    "method_asmt_used",
                    models.CharField(
                        blank=True,
                        choices=[("per", "Per"), ("drce", "Drce"), ("wpns", "WPNS")],
                        max_length=90,
                        null=True,
                        verbose_name="what method has this assessment used",
                    ),
                ),
                (
                    "ns_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point email"),
                ),
                (
                    "ns_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point name"),
                ),
                (
                    "ns_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns focal point phone"),
                ),
                (
                    "partner_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point email"),
                ),
                (
                    "partner_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point name"),
                ),
                (
                    "partner_focal_point_organization",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point organization name"),
                ),
                (
                    "partner_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="partner focal point phone"),
                ),
                (
                    "type_of_assessment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="type_of_assessment",
                        to="per.assessmenttype",
                        verbose_name="type of assessment",
                    ),
                ),
                ("assessment_number", models.IntegerField(default=1, verbose_name="assessment number")),
                (
                    "assess_climate_environment_of_country",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Do you want to assess the climate and environment of your National Society?",
                    ),
                ),
                (
                    "assess_preparedness_of_country",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Do you want to assess the preparedness of your National Society for epidemics and pandemics?",
                    ),
                ),
                (
                    "assess_urban_aspect_of_country",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Do you want to assess the urban aspects of your National Society?"
                    ),
                ),
                ("date_of_orientation", models.DateField(blank=True, null=True, verbose_name="Date of Orientation")),
                (
                    "date_of_previous_assessment",
                    models.DateField(blank=True, null=True, verbose_name="Date of previous assessment"),
                ),
                (
                    "type_of_per_assessment",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="Type of Per Asessement"),
                ),
                ("workplan_development_date", models.DateField(blank=True, null=True, verbose_name="Workplan Development Date")),
                ("workplan_revision_date", models.DateField(blank=True, null=True, verbose_name="Workplan Revision Date")),
                (
                    "ns_second_focal_point_email",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point email"),
                ),
                (
                    "ns_second_focal_point_name",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point name"),
                ),
                (
                    "ns_second_focal_point_phone",
                    models.CharField(blank=True, max_length=90, null=True, verbose_name="ns second focal point phone"),
                ),
                (
                    "phase",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Orientation"),
                            (2, "Assessment"),
                            (3, "Prioritisation"),
                            (4, "WorkPlan"),
                            (5, "Action And Accoutability"),
                        ],
                        default=1,
                        null=True,
                        verbose_name="phase",
                    ),
                ),
                ("is_draft", models.BooleanField(blank=True, null=True, verbose_name="is draft")),
            ],
            options={
                "verbose_name": "PER General Overview",
                "verbose_name_plural": "PER General Overviews",
                "ordering": ("country",),
            },
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("comment", models.TextField(blank=True, null=True, verbose_name="comment")),
                (
                    "area",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to="per.formarea", verbose_name="area"
                    ),
                ),
                (
                    "overview",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forms",
                        to="per.overview",
                        verbose_name="overview",
                    ),
                ),
            ],
            options={
                "ordering": ("area", "created_at"),
                "verbose_name": "Form",
                "verbose_name_plural": "Forms",
            },
        ),
        migrations.CreateModel(
            name="FormData",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("notes", models.TextField(blank=True, null=True, verbose_name="notes")),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="form_data", to="per.form", verbose_name="form"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="per.formquestion", verbose_name="question"
                    ),
                ),
                (
                    "selected_answer",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="per.formanswer", verbose_name="answer"
                    ),
                ),
                ("notes_ar", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_en", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_es", models.TextField(blank=True, null=True, verbose_name="notes")),
                ("notes_fr", models.TextField(blank=True, null=True, verbose_name="notes")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Form Data",
                "verbose_name_plural": "Form Data",
                "ordering": ("form", "question__question_num"),
            },
        ),
        migrations.CreateModel(
            name="CustomPerWorkPlanComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("actions", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("due_date", models.DateField(blank=True, null=True, verbose_name="Due date")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Not Started"), (1, "Ongoing"), (2, "Delayed"), (3, "Standby"), (4, "Finished")],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "supported_by",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="api.country"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormComponentConsiderations",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("urban_considerations", models.TextField(blank=True, null=True, verbose_name="Urban Considerations")),
                ("epi_considerations", models.TextField(blank=True, null=True, verbose_name="Epi Considerations")),
                (
                    "climate_environmental_conisderations",
                    models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormComponentQuestionAndAnswer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("notes", models.TextField(blank=True, null=True, verbose_name="notes")),
                (
                    "answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="per.formanswer",
                        verbose_name="answer",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="per.formquestion",
                        verbose_name="question",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="formcomponent",
            name="question_responses",
            field=models.ManyToManyField(blank=True, to="per.formcomponentquestionandanswer", verbose_name="Question responses"),
        ),
        migrations.CreateModel(
            name="FormComponentResponse",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "component",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.formcomponent",
                        verbose_name="Form Component",
                    ),
                ),
                (
                    "consideration_responses",
                    models.ManyToManyField(
                        blank=True, to="per.formcomponentconsiderations", verbose_name="Consideration responses"
                    ),
                ),
                (
                    "question_responses",
                    models.ManyToManyField(
                        blank=True, to="per.formcomponentquestionandanswer", verbose_name="Question responses"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AreaResponse",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("area", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="per.formarea", verbose_name="Area")),
                (
                    "component_response",
                    models.ManyToManyField(blank=True, to="per.formcomponentresponse", verbose_name="Component Response"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormPrioritizationComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_prioritized", models.BooleanField(blank=True, null=True, verbose_name="Is prioritized")),
                ("justification_text", models.TextField(blank=True, null=True, verbose_name="Justification Text")),
                (
                    "component",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.formcomponent",
                        verbose_name="component",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerFile",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="per/images/", verbose_name="file")),
                ("caption", models.CharField(blank=True, max_length=225, null=True)),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created_by",
                    ),
                ),
            ],
            options={
                "verbose_name": "per file",
                "verbose_name_plural": "per files",
            },
        ),
        migrations.CreateModel(
            name="PerComponentRating",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("value", models.IntegerField(verbose_name="value")),
            ],
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="rating",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="per.percomponentrating"
            ),
        ),
        migrations.CreateModel(
            name="PerWorkPlanComponent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("actions", models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions")),
                ("due_date", models.DateField(blank=True, null=True, verbose_name="Due date")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Not Started"), (1, "Ongoing"), (2, "Delayed"), (3, "Standby"), (4, "Finished")],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        default=85, on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="Component"
                    ),
                ),
                (
                    "supported_by",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="api.country"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="overview",
            name="orientation_documents",
            field=models.ManyToManyField(blank=True, to="per.perfile", verbose_name="orientation documents"),
        ),
        migrations.CreateModel(
            name="FormPrioritization",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "prioritized_action_responses",
                    models.ManyToManyField(
                        blank=True, to="per.formprioritizationcomponent", verbose_name="Form prioritization component"
                    ),
                ),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
            ],
        ),
        migrations.CreateModel(
            name="PerWorkPlan",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                (
                    "prioritized_action_responses",
                    models.ManyToManyField(blank=True, to="per.perworkplancomponent", verbose_name="WorkPlan Component"),
                ),
                (
                    "additional_action_responses",
                    models.ManyToManyField(
                        blank=True, to="per.customperworkplancomponent", verbose_name="Custom Per-WorkPlan Component"
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
            ],
        ),
        migrations.AlterField(
            model_name="overview",
            name="is_draft",
            field=models.BooleanField(default=True, verbose_name="is draft"),
        ),
        migrations.CreateModel(
            name="PerAssessment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("area_responses", models.ManyToManyField(blank=True, to="per.arearesponse", verbose_name="Area Response")),
                (
                    "overview",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="per.overview",
                        verbose_name="Overview",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="is draft")),
            ],
        ),
        migrations.RemoveField(
            model_name="formcomponentresponse",
            name="consideration_responses",
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="climate_environmental_considerations",
            field=models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="epi_considerations",
            field=models.TextField(blank=True, null=True, verbose_name="Epi Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="urban_considerations",
            field=models.TextField(blank=True, null=True, verbose_name="Urban Considerations"),
        ),
        migrations.DeleteModel(
            name="FormComponentConsiderations",
        ),
        migrations.AddField(
            model_name="formcomponent",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="formcomponent",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.RenameField(
            model_name="overview",
            old_name="method_asmt_used",
            new_name="assessment_method",
        ),
        migrations.RemoveField(
            model_name="overview",
            name="type_of_per_assessment",
        ),
        migrations.AddField(
            model_name="overview",
            name="type_of_previous_assessment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="type_of_previous_assessment",
                to="per.assessmenttype",
                verbose_name="type of previous assessment",
            ),
        ),
        migrations.AlterField(
            model_name="formcomponentresponse",
            name="component",
            field=models.ForeignKey(
                default=85, on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="Form Component"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="formprioritizationcomponent",
            name="component",
            field=models.ForeignKey(
                default=85, on_delete=django.db.models.deletion.CASCADE, to="per.formcomponent", verbose_name="component"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="notes",
            field=models.TextField(blank=True, null=True, verbose_name="Notes"),
        ),
        migrations.AlterField(
            model_name="overview",
            name="date_of_assessment",
            field=models.DateField(blank=True, null=True, verbose_name="date of assessment"),
        ),
        migrations.AlterField(
            model_name="overview",
            name="assessment_method",
            field=models.CharField(
                blank=True,
                choices=[("per", "PER"), ("drce", "DRCE"), ("wpns", "WPNS")],
                max_length=90,
                null=True,
                verbose_name="what method has this assessment used",
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0086_migrate_old_form.Migration.migrate_data,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0087_update_phase.Migration.update_phase,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0088_update_assessment_method.Migration.update_overview_assessment_method,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AlterField(
            model_name="overview",
            name="type_of_previous_assessment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="type_of_previous_assessment",
                to="per.assessmenttype",
                verbose_name="type of previous assessment",
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0090_auto_20231030_1505.update_question_answer,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.CreateModel(
            name="OpsLearning",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("learning", models.TextField(blank=True, null=True, verbose_name="learning")),
                ("learning_validated", models.TextField(blank=True, null=True, verbose_name="learning (validated)")),
                ("appeal_code", models.CharField(blank=True, max_length=20, null=True, verbose_name="appeal (MDR) code")),
                ("type", models.IntegerField(choices=[(1, "Lesson learned"), (2, "Challenge")], default=1, verbose_name="type")),
                (
                    "type_validated",
                    models.IntegerField(
                        choices=[(1, "Lesson learned"), (2, "Challenge")], default=1, verbose_name="type (validated)"
                    ),
                ),
                ("is_validated", models.BooleanField(default=False, verbose_name="is validated?")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified_at")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "per_component",
                    models.ManyToManyField(
                        blank=True, related_name="components", to="per.formcomponent", verbose_name="PER Components"
                    ),
                ),
                (
                    "per_component_validated",
                    models.ManyToManyField(
                        blank=True,
                        related_name="validated_components",
                        to="per.formcomponent",
                        verbose_name="PER Components (validated)",
                    ),
                ),
                (
                    "sector",
                    models.ManyToManyField(
                        blank=True, related_name="sectors", to="deployments.sectortag", verbose_name="Sectors"
                    ),
                ),
                (
                    "sector_validated",
                    models.ManyToManyField(
                        blank=True,
                        related_name="validated_sectors",
                        to="deployments.sectortag",
                        verbose_name="Sectors (validated)",
                    ),
                ),
                (
                    "organization",
                    models.IntegerField(
                        choices=[(1, "Secretariat"), (2, "National Society")], default=1, verbose_name="organization"
                    ),
                ),
                (
                    "organization_validated",
                    models.IntegerField(
                        choices=[(1, "Secretariat"), (2, "National Society")], default=1, verbose_name="organization (validated)"
                    ),
                ),
            ],
            options={
                "verbose_name": "Operational Learning",
                "verbose_name_plural": "Operational Learnings",
                "ordering": ("learning",),
            },
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="supported_by_organization_type",
            field=models.IntegerField(
                blank=True,
                choices=[(0, "UN Organization"), (1, "Private Sector"), (2, "Government"), (3, "National Society")],
                null=True,
                verbose_name="Supported By Organization Type",
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0094_update_supported_by_organization_type.Migration.update_suported_by_oragnization_type,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.CreateModel(
            name="PerDocumentUpload",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="per/documents/", verbose_name="file")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "country",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.country", verbose_name="country"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created_by",
                    ),
                ),
            ],
        ),
        # migrations.RunPython(
        #     code=per.migrations.0096_migrate_formdata_notes.Migration.migrate_formdata_notes,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AddField(
            model_name="formcomponent",
            name="is_parent",
            field=models.BooleanField(blank=True, null=True, verbose_name="Is parent"),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0098_auto_20240118_0552.Migration.update_component_description,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.CreateModel(
            name="FormQuestionGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("title_en", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_es", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_fr", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("title_ar", models.CharField(max_length=250, null=True, verbose_name="title")),
                ("description", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_en", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_es", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_fr", models.TextField(blank=True, null=True, verbose_name="description")),
                ("description_ar", models.TextField(blank=True, null=True, verbose_name="description")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="per.formcomponent", verbose_name="component"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="formquestion",
            name="question_group",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="per.formquestiongroup"
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0100_auto_20240130_0851.Migration.migrate_component_to_question_group,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.CreateModel(
            name="OrganizationTypes",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated Organization type?")),
                ("order", models.SmallIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Organization type",
                "verbose_name_plural": "Organization types",
            },
        ),
        migrations.RemoveField(
            model_name="opslearning",
            name="organization",
        ),
        migrations.RemoveField(
            model_name="opslearning",
            name="organization_validated",
        ),
        migrations.AddField(
            model_name="opslearning",
            name="organization",
            field=models.ManyToManyField(
                blank=True, related_name="organizations", to="per.organizationtypes", verbose_name="Organizations"
            ),
        ),
        migrations.AddField(
            model_name="opslearning",
            name="organization_validated",
            field=models.ManyToManyField(
                blank=True,
                related_name="validated_organizations",
                to="per.organizationtypes",
                verbose_name="Organizations (validated)",
            ),
        ),
        migrations.AddField(
            model_name="opslearning",
            name="appeal_document_id",
            field=models.IntegerField(blank=True, null=True, verbose_name="Appeal document ID"),
        ),
        migrations.AlterField(
            model_name="opslearning",
            name="appeal_code",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.appeal",
                to_field="code",
                verbose_name="appeal (MDR) code",
            ),
        ),
        migrations.AlterField(
            model_name="opslearning",
            name="appeal_code",
            field=models.ForeignKey(
                blank=True,
                db_column="appeal_code",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.appeal",
                to_field="code",
                verbose_name="appeal (MDR) code",
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0098_fix_reversion_data_20240208_0502.modify_per_datetime_data_to_date,
        #     reverse_code=per.migrations.0098_fix_reversion_data_20240208_0502.modify_per_date_data_to_datetime,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0099_migrate_notes.migrate_formdata_notes,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0100_migrate_all_notes.migrate_formdata_notes,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AlterField(
            model_name="overview",
            name="phase",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "Orientation"),
                    (2, "Assessment"),
                    (3, "Prioritisation"),
                    (4, "WorkPlan"),
                    (5, "Action And Accountability"),
                ],
                default=1,
                null=True,
                verbose_name="phase",
            ),
        ),
        migrations.AddField(
            model_name="formcomponent",
            name="has_question_group",
            field=models.BooleanField(blank=True, null=True, verbose_name="Has Question Group"),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0106_auto_20240314_1059.update_component_question_group,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="supported_by_organization_type",
            field=models.IntegerField(
                blank=True,
                choices=[(0, "UN Organization"), (1, "Private Sector"), (2, "Government"), (3, "National Society")],
                null=True,
                verbose_name="Supported By Organization Type",
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0108_auto_20240320_0801.update_suported_by_oragnization_type,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0109_auto_20240320_0804.update_description_to_null,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=per.migrations.0110_auto_20240325_0611.update_description_to_null,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AddField(
            model_name="perdocumentupload",
            name="per",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="per.overview", verbose_name="Per"
            ),
        ),
        # migrations.RunPython(
        #     code=per.migrations.0112_auto_20240426_0522.delete_form_question,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="notes_ar",
            field=models.TextField(blank=True, null=True, verbose_name="notes"),
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="notes_en",
            field=models.TextField(blank=True, null=True, verbose_name="notes"),
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="notes_es",
            field=models.TextField(blank=True, null=True, verbose_name="notes"),
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="notes_fr",
            field=models.TextField(blank=True, null=True, verbose_name="notes"),
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="formcomponentquestionandanswer",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="climate_environmental_considerations_ar",
            field=models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="climate_environmental_considerations_en",
            field=models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="climate_environmental_considerations_es",
            field=models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="climate_environmental_considerations_fr",
            field=models.TextField(blank=True, null=True, verbose_name="Climate Environmental Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="epi_considerations_ar",
            field=models.TextField(blank=True, null=True, verbose_name="Epi Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="epi_considerations_en",
            field=models.TextField(blank=True, null=True, verbose_name="Epi Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="epi_considerations_es",
            field=models.TextField(blank=True, null=True, verbose_name="Epi Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="epi_considerations_fr",
            field=models.TextField(blank=True, null=True, verbose_name="Epi Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="notes_ar",
            field=models.TextField(blank=True, null=True, verbose_name="Notes"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="notes_en",
            field=models.TextField(blank=True, null=True, verbose_name="Notes"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="notes_es",
            field=models.TextField(blank=True, null=True, verbose_name="Notes"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="notes_fr",
            field=models.TextField(blank=True, null=True, verbose_name="Notes"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="urban_considerations_ar",
            field=models.TextField(blank=True, null=True, verbose_name="Urban Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="urban_considerations_en",
            field=models.TextField(blank=True, null=True, verbose_name="Urban Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="urban_considerations_es",
            field=models.TextField(blank=True, null=True, verbose_name="Urban Considerations"),
        ),
        migrations.AddField(
            model_name="formcomponentresponse",
            name="urban_considerations_fr",
            field=models.TextField(blank=True, null=True, verbose_name="Urban Considerations"),
        ),
        migrations.AddField(
            model_name="overview",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="overview",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="arearesponse",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="arearesponse",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="perassessment",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="perassessment",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="title_ar",
            field=models.CharField(max_length=250, null=True, verbose_name="title"),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="title_en",
            field=models.CharField(max_length=250, null=True, verbose_name="title"),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="title_es",
            field=models.CharField(max_length=250, null=True, verbose_name="title"),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="title_fr",
            field=models.CharField(max_length=250, null=True, verbose_name="title"),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="percomponentrating",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="actions_ar",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="actions_en",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="actions_es",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="actions_fr",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="customperworkplancomponent",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="justification_text_ar",
            field=models.TextField(blank=True, null=True, verbose_name="Justification Text"),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="justification_text_en",
            field=models.TextField(blank=True, null=True, verbose_name="Justification Text"),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="justification_text_es",
            field=models.TextField(blank=True, null=True, verbose_name="Justification Text"),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="justification_text_fr",
            field=models.TextField(blank=True, null=True, verbose_name="Justification Text"),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="formprioritizationcomponent",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="actions_ar",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="actions_en",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="actions_es",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="actions_fr",
            field=models.TextField(blank=True, max_length=900, null=True, verbose_name="Actions"),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="perworkplancomponent",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AlterField(
            model_name="formcomponent",
            name="status",
            field=models.CharField(
                blank=True,
                choices=[
                    ("high_performance", "High Performance"),
                    ("exists_could_be_strengthened", "Exists – Could be Strengthened"),
                    ("needs_improvement", "Needs Improvement"),
                    ("partially_exists", "Partially Exists"),
                    ("does_not_exist", "Does Not Exist"),
                ],
                max_length=100,
                null=True,
                verbose_name="status",
            ),
        ),
    ]
