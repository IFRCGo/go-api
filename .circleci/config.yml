# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2

references:

  container_python36: &container_python36
    docker:
      - image: circleci/python:3.6.2
    working_dir: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v0-repo-{{ .Branch }}-{{ .Revision }}
        - v0-repo-{{ .Branch }}
        - v0-repo

  restore_cache: &restore_cache
    restore_cache:
      keys: 
        - v0-dependencies-{{ checksum "requirements.txt"}}
        - v0-dependencies
      paths:
        - /caches/project.tar

  create_env: &create_env
    run:
      name: Creating .env
      command: |
        touch .env

  restore_docker: &restore_docker
    run:
      name: Load Docker image layer caches
      command: |
        set +o pipefail
        docker load -i /caches/docker.tar | true

  build_docker: &build_docker
    run: 
      name: Build docker image
      command: |
        docker build --cache-from=docker-image:latest -t docker-image:latest .

  save_docker: &save_docker
    run:
      name: Save Docker image layer cache
      command: |
        mkdir -p /caches
        docker save -o /caches/docker.tar docker-image:latest  

jobs:

  checkout_code:
    <<: *container_python36
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v0-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  install_and_test:
    <<: *container_python36
    steps:  
      - *restore_repo
      - *restore_cache
      - run: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r requirements.txt
            ./manage.py test
      - save_cache:
          key: v0-dependencies-{{ checksum "requirements.txt"}}
          paths:
            - ~/venv

  build_and_test_docker:
    docker:
      - image: docker:17.05.0-ce-git
    working_dir: ~/project
    steps:
      - *restore_repo
      - setup_remote_docker
      - *restore_docker
      - *build_docker
      - *save_docker
      - *create_env
      - run:
          name: Run tests
          command: |
            docker run --env-file .env -t docker-image:latest manage.py test

  deploy:
    <<: *container_python36
    steps:
      - *restore_repo
      - *restore_cache
      - *create_env
      - setup_remote_docker
      - add_ssh_keys
      - run:
          name: Push tag to github
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            VERSION=`awk -F\' '{print $2,$4}' main/__init__.py`
            git tag $VERSION
            git push origin $VERSION
      - *restore_docker
      - *build_docker
      - *save_docker
      - run:
          name: Push image to Docker Hub
          command: |
            docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
            docker tag docker-image:latest developmentseed/ifrc-go-api:$VERSION
            docker push developmentseed/ifrc-go-api:$VERSION

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - install_and_test:
          requires:
            - checkout_code
      - build_and_test_docker:
          requires:
            - checkout_code
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - install_and_test
            - build_and_test_docker
          filters:
            branches:
              only: master
