# Generated by Django 4.2.16 on 2024-10-08 07:30

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("api", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DeployedPerson",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateTimeField(null=True, verbose_name="start date")),
                ("end_date", models.DateTimeField(db_index=True, null=True, verbose_name="end date")),
                ("name", models.CharField(blank=True, max_length=255, null=True, verbose_name="name")),
                ("role", models.CharField(blank=True, max_length=512, null=True, verbose_name="role")),
                ("role_en", models.CharField(blank=True, max_length=512, null=True, verbose_name="role")),
                ("role_es", models.CharField(blank=True, max_length=512, null=True, verbose_name="role")),
                ("role_fr", models.CharField(blank=True, max_length=512, null=True, verbose_name="role")),
                ("role_ar", models.CharField(blank=True, max_length=512, null=True, verbose_name="role")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Deployed Person",
                "verbose_name_plural": "Deployed Persons",
            },
        ),
        migrations.CreateModel(
            name="EmergencyProject",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified at")),
                (
                    "activity_lead",
                    models.CharField(
                        choices=[("national_society", "National Society"), ("deployed_eru", "Deployed ERU")],
                        max_length=30,
                        verbose_name="Activity lead",
                    ),
                ),
                (
                    "reporting_ns_contact_name",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Name"),
                ),
                (
                    "reporting_ns_contact_role",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Role"),
                ),
                (
                    "reporting_ns_contact_email",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Email"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="End Date")),
                (
                    "status",
                    models.CharField(
                        choices=[("on_going", "Ongoing"), ("complete", "Complete"), ("planned", "Planned")],
                        default="on_going",
                        max_length=40,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("logged_in_user", "RCRC Movement"),
                            ("ifrc_only", "IFRC Secretariat"),
                            ("public", "Public"),
                            ("ifrc_ns", "IFRC and NS"),
                        ],
                        default="public",
                        max_length=32,
                        verbose_name="visibility",
                    ),
                ),
                ("admin2", models.ManyToManyField(blank=True, to="api.admin2", verbose_name="admin2")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="api.country", verbose_name="Country"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityAction",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                ("is_cash_type", models.BooleanField(default=False, verbose_name="is_cash_type")),
                ("has_location", models.BooleanField(default=False, verbose_name="has location")),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityLocation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("latitude", models.FloatField(verbose_name="latitude")),
                ("longitude", models.FloatField(verbose_name="longitude")),
                ("description", models.TextField(verbose_name="location description")),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivitySector",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="MolnixTagGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("molnix_id", models.IntegerField()),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated group?")),
            ],
            options={
                "verbose_name": "Molnix Tag Group",
                "verbose_name_plural": "Molnix Tag Groups",
            },
        ),
        migrations.CreateModel(
            name="PartnerSocietyActivities",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("activity", models.CharField(max_length=50, verbose_name="activity")),
                ("activity_en", models.CharField(max_length=50, null=True, verbose_name="activity")),
                ("activity_es", models.CharField(max_length=50, null=True, verbose_name="activity")),
                ("activity_fr", models.CharField(max_length=50, null=True, verbose_name="activity")),
                ("activity_ar", models.CharField(max_length=50, null=True, verbose_name="activity")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner society activity",
                "verbose_name_plural": "Partner society activities",
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified at")),
                (
                    "reporting_ns_contact_name",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Name"),
                ),
                (
                    "reporting_ns_contact_role",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Role"),
                ),
                (
                    "reporting_ns_contact_email",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Email"),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("name_en", models.TextField(null=True, verbose_name="name")),
                ("name_es", models.TextField(null=True, verbose_name="name")),
                ("name_fr", models.TextField(null=True, verbose_name="name")),
                ("name_ar", models.TextField(null=True, verbose_name="name")),
                ("description", tinymce.models.HTMLField(blank=True, default="", verbose_name="description")),
                ("description_en", tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description")),
                ("description_es", tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description")),
                ("description_fr", tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description")),
                ("description_ar", tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description")),
                (
                    "programme_type",
                    models.IntegerField(
                        choices=[(0, "Bilateral"), (1, "Multilateral"), (2, "Domestic")],
                        default=0,
                        help_text='<a target="_blank" href="/api/v2/programmetype">Key/value pairs</a>',
                        verbose_name="programme type",
                    ),
                ),
                (
                    "operation_type",
                    models.IntegerField(
                        choices=[(0, "Programme"), (1, "Emergency Operation")],
                        default=0,
                        help_text='<a target="_blank" href="/api/v2/operationtype">Key/value pairs</a>',
                        verbose_name="operation type",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="start date")),
                ("end_date", models.DateField(verbose_name="end date")),
                ("budget_amount", models.IntegerField(blank=True, null=True, verbose_name="budget amount")),
                ("actual_expenditure", models.IntegerField(blank=True, null=True, verbose_name="actual expenditure")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Planned"), (1, "Ongoing"), (2, "Completed")],
                        default=0,
                        help_text='<a target="_blank" href="/api/v2/projectstatus">Key/value pairs</a>',
                        verbose_name="status",
                    ),
                ),
                ("target_male", models.IntegerField(blank=True, null=True, verbose_name="target male")),
                ("target_female", models.IntegerField(blank=True, null=True, verbose_name="target female")),
                ("target_other", models.IntegerField(blank=True, null=True, verbose_name="target other")),
                ("target_total", models.IntegerField(blank=True, null=True, verbose_name="target total")),
                ("reached_male", models.IntegerField(blank=True, null=True, verbose_name="reached male")),
                ("reached_female", models.IntegerField(blank=True, null=True, verbose_name="reached female")),
                ("reached_other", models.IntegerField(blank=True, null=True, verbose_name="reached other")),
                ("reached_total", models.IntegerField(blank=True, null=True, verbose_name="reached total")),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("logged_in_user", "RCRC Movement"),
                            ("ifrc_only", "IFRC Secretariat"),
                            ("public", "Public"),
                            ("ifrc_ns", "IFRC and NS"),
                        ],
                        default="public",
                        max_length=64,
                        verbose_name="visibility",
                    ),
                ),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.generaldocument",
                        verbose_name="linked document",
                    ),
                ),
                (
                    "dtype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.disastertype",
                        verbose_name="disaster type",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.event", verbose_name="event"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="modified by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
            },
        ),
        migrations.CreateModel(
            name="RegionalProject",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("name_en", models.CharField(max_length=100, null=True, verbose_name="name")),
                ("name_es", models.CharField(max_length=100, null=True, verbose_name="name")),
                ("name_fr", models.CharField(max_length=100, null=True, verbose_name="name")),
                ("name_ar", models.CharField(max_length=100, null=True, verbose_name="name")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified at")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regional Project",
                "verbose_name_plural": "Regional Projects",
            },
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("color", models.CharField(blank=True, max_length=7, null=True, verbose_name="color")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated sector?")),
                ("order", models.SmallIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Project Sector",
                "verbose_name_plural": "Project Sectors",
            },
        ),
        migrations.CreateModel(
            name="SectorTag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("color", models.CharField(blank=True, max_length=7, null=True, verbose_name="color")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated sector tag?")),
                ("order", models.SmallIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Project Sector Tag",
                "verbose_name_plural": "Project Sector Tags",
            },
        ),
        migrations.CreateModel(
            name="FactPerson",
            fields=[
                (
                    "deployedperson_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="deployments.deployedperson",
                    ),
                ),
                ("society_deployed_from", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "verbose_name": "FACT Person",
                "verbose_name_plural": "FACT People",
            },
            bases=("deployments.deployedperson",),
        ),
        migrations.CreateModel(
            name="PartnerSocietyDeployment",
            fields=[
                (
                    "deployedperson_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="deployments.deployedperson",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner Society Deployment",
                "verbose_name_plural": "Partner Society Deployments",
            },
            bases=("deployments.deployedperson",),
        ),
        migrations.CreateModel(
            name="Rdrt",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateTimeField(null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                ("country", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.country")),
                (
                    "dtype",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.disastertype"),
                ),
                ("event", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.event")),
                ("region", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.region")),
            ],
            options={
                "verbose_name": "RDRT/RIT",
                "verbose_name_plural": "RDRTs/RITs",
            },
        ),
        migrations.CreateModel(
            name="ProjectImport",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("message", models.TextField(verbose_name="message")),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("success", "Success"), ("failure", "Failure")],
                        default="pending",
                        max_length=10,
                        verbose_name="status",
                    ),
                ),
                ("file", models.FileField(upload_to="project-imports/", verbose_name="file")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                ("projects_created", models.ManyToManyField(to="deployments.project", verbose_name="projects created")),
            ],
            options={
                "verbose_name": "Project Import",
                "verbose_name_plural": "Projects Import",
            },
        ),
        migrations.AddField(
            model_name="project",
            name="primary_sector",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="deployments.sector", verbose_name="sector"),
        ),
        migrations.AddField(
            model_name="project",
            name="project_admin2",
            field=models.ManyToManyField(blank=True, to="api.admin2", verbose_name="admin2"),
        ),
        migrations.AddField(
            model_name="project",
            name="project_country",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="api.country",
                verbose_name="country",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="project_districts",
            field=models.ManyToManyField(blank=True, to="api.district", verbose_name="districts"),
        ),
        migrations.AddField(
            model_name="project",
            name="regional_project",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="deployments.regionalproject",
                verbose_name="regional project",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="reporting_ns",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ns_projects",
                to="api.country",
                verbose_name="reporting national society",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="secondary_sectors",
            field=models.ManyToManyField(blank=True, related_name="tags", to="deployments.sectortag"),
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="user",
            ),
        ),
        migrations.CreateModel(
            name="PersonnelDeployment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "alert_date",
                    models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="alert date"),
                ),
                (
                    "exp_start_date",
                    models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="expire start date"),
                ),
                (
                    "end_duration",
                    models.CharField(
                        blank=True, help_text="still not used in frontend", max_length=100, null=True, verbose_name="end duration"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="start date"),
                ),
                ("end_date", models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="end date")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("previous_update", models.DateTimeField(blank=True, null=True, verbose_name="previous update")),
                ("comments", models.TextField(blank=True, null=True, verbose_name="comments")),
                ("comments_en", models.TextField(blank=True, null=True, verbose_name="comments")),
                ("comments_es", models.TextField(blank=True, null=True, verbose_name="comments")),
                ("comments_fr", models.TextField(blank=True, null=True, verbose_name="comments")),
                ("comments_ar", models.TextField(blank=True, null=True, verbose_name="comments")),
                ("is_molnix", models.BooleanField(default=False)),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "appeal_deployed_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="still not used in frontend",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.appeal",
                        verbose_name="appeal deployed to",
                    ),
                ),
                (
                    "country_deployed_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.country", verbose_name="country deployed to"
                    ),
                ),
                (
                    "event_deployed_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.event",
                        verbose_name="event deployed to",
                    ),
                ),
                (
                    "region_deployed_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.region",
                        verbose_name="region deployed to",
                    ),
                ),
            ],
            options={
                "verbose_name": "Personnel Deployment",
                "verbose_name_plural": "Personnel Deployments",
            },
        ),
        migrations.CreateModel(
            name="MolnixTag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("molnix_id", models.IntegerField()),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(blank=True, max_length=512)),
                ("color", models.CharField(max_length=6)),
                ("tag_type", models.CharField(max_length=127)),
                ("tag_category", models.CharField(max_length=127, null=True)),
                ("groups", models.ManyToManyField(blank=True, related_name="groups", to="deployments.molnixtaggroup")),
            ],
        ),
        migrations.CreateModel(
            name="Heop",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateTimeField(null=True)),
                ("end_date", models.DateTimeField(null=True)),
                ("person", models.CharField(blank=True, max_length=100, null=True)),
                ("role", models.CharField(blank=True, default="HeOps", max_length=32, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                ("country", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.country")),
                (
                    "dtype",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.disastertype"),
                ),
                ("event", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.event")),
                ("region", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.region")),
            ],
            options={
                "verbose_name": "HeOp",
                "verbose_name_plural": "HeOps",
            },
        ),
        migrations.CreateModel(
            name="Fact",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateTimeField(null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                ("country", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.country")),
                (
                    "dtype",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.disastertype"),
                ),
                ("event", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.event")),
                ("region", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.region")),
            ],
            options={
                "verbose_name": "FACT",
                "verbose_name_plural": "FACTs",
            },
        ),
        migrations.CreateModel(
            name="ERUReadiness",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "ERU_type",
                    models.IntegerField(
                        choices=[
                            (0, "Basecamp"),
                            (1, "IT & Telecom"),
                            (2, "Logistics"),
                            (3, "RCRC Emergency Hospital"),
                            (4, "RCRC Emergency Clinic"),
                            (5, "Relief"),
                            (6, "Wash M15"),
                            (7, "Wash MSM20"),
                            (8, "Wash M40"),
                            (9, "Water Supply and rehabilitation"),
                            (10, "Household Water Treatment and safe storage"),
                            (11, "Cholera Case management at Community level"),
                            (12, "Safe and Dignified Burials"),
                            (13, "Community Based Surveillance"),
                            (14, "Base Camp – S"),
                            (15, "Base Camp – M"),
                            (16, "Base Camp – L"),
                            (17, "Outpatient Department (OPD) Module"),
                            (18, "MHPSS"),
                        ],
                        default=0,
                        verbose_name="ERU type",
                    ),
                ),
                ("is_personnel", models.BooleanField(default=False, verbose_name="is personnel?")),
                ("is_equipment", models.BooleanField(default=False, verbose_name="is equipment?")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                (
                    "national_society",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.country",
                        verbose_name="national society",
                    ),
                ),
            ],
            options={
                "verbose_name": "ERU Readiness",
                "verbose_name_plural": "NS-es ERU Readiness",
                "ordering": ("updated_at", "national_society"),
            },
        ),
        migrations.CreateModel(
            name="ERUOwner",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                (
                    "national_society_country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.country",
                        verbose_name="national society country",
                    ),
                ),
            ],
            options={
                "verbose_name": "ERUs from a National Society",
                "verbose_name_plural": "ERUs",
            },
        ),
        migrations.CreateModel(
            name="ERU",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (0, "Basecamp"),
                            (1, "IT & Telecom"),
                            (2, "Logistics"),
                            (3, "RCRC Emergency Hospital"),
                            (4, "RCRC Emergency Clinic"),
                            (5, "Relief"),
                            (6, "Wash M15"),
                            (7, "Wash MSM20"),
                            (8, "Wash M40"),
                            (9, "Water Supply and rehabilitation"),
                            (10, "Household Water Treatment and safe storage"),
                            (11, "Cholera Case management at Community level"),
                            (12, "Safe and Dignified Burials"),
                            (13, "Community Based Surveillance"),
                            (14, "Base Camp – S"),
                            (15, "Base Camp – M"),
                            (16, "Base Camp – L"),
                            (17, "Outpatient Department (OPD) Module"),
                            (18, "MHPSS"),
                        ],
                        default=0,
                        help_text='<a target="_blank" href="/api/v2/erutype">Key/value pairs</a>',
                        verbose_name="type",
                    ),
                ),
                ("units", models.IntegerField(default=0, verbose_name="units")),
                ("equipment_units", models.IntegerField(default=0, verbose_name="equipment units")),
                (
                    "num_people_deployed",
                    models.IntegerField(
                        default=0, help_text="still not used in frontend", verbose_name="number of people deployed"
                    ),
                ),
                (
                    "supporting_societies",
                    models.CharField(
                        blank=True,
                        help_text="still not used in frontend",
                        max_length=500,
                        null=True,
                        verbose_name="supporting societies",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="start date"),
                ),
                ("end_date", models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="end date")),
                ("available", models.BooleanField(default=False, verbose_name="available")),
                (
                    "alert_date",
                    models.DateTimeField(help_text="still not used in frontend", null=True, verbose_name="alert date"),
                ),
                (
                    "appeal",
                    models.ForeignKey(
                        blank=True,
                        help_text="still not used in frontend",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.appeal",
                        verbose_name="appeal",
                    ),
                ),
                (
                    "deployed_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.country",
                        verbose_name="country deployed to",
                    ),
                ),
                (
                    "eru_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="deployments.eruowner", verbose_name="owner"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.event", verbose_name="event"
                    ),
                ),
            ],
            options={
                "verbose_name": "Emergency Response Unit",
                "verbose_name_plural": "Emergency Response Units",
            },
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityActionSupply",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="supplies",
                        to="deployments.emergencyprojectactivityaction",
                        verbose_name="action",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="emergencyprojectactivityaction",
            name="sector",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="deployments.emergencyprojectactivitysector",
                verbose_name="sector",
            ),
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivity",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_simplified_report", models.BooleanField(default=True, verbose_name="is_simplified_report")),
                (
                    "is_disaggregated_for_disabled",
                    models.BooleanField(blank=True, null=True, verbose_name="Is disaggregated for disabled"),
                ),
                (
                    "has_no_data_on_people_reached",
                    models.BooleanField(blank=True, null=True, verbose_name="Has no data on people reached"),
                ),
                (
                    "people_households",
                    models.CharField(
                        blank=True,
                        choices=[("people", "People"), ("households", "Households")],
                        max_length=50,
                        null=True,
                        verbose_name="People Households",
                    ),
                ),
                ("household_count", models.IntegerField(blank=True, null=True, verbose_name="Household")),
                ("amount", models.IntegerField(blank=True, null=True, verbose_name="Amount")),
                ("beneficiaries_count", models.IntegerField(blank=True, null=True, verbose_name="Beneficiaries Count")),
                ("item_count", models.IntegerField(blank=True, null=True, verbose_name="Item")),
                ("people_count", models.IntegerField(blank=True, null=True, verbose_name="People")),
                ("male_count", models.IntegerField(blank=True, null=True, verbose_name="Men")),
                ("female_count", models.IntegerField(blank=True, null=True, verbose_name="Female")),
                ("male_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Male Unknown Age")),
                ("female_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Female Unknown Age")),
                ("other_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Other Unknown Age")),
                ("male_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 0-1")),
                ("male_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 2-5")),
                ("male_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 6-12")),
                ("male_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 13-17")),
                ("male_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Men 18-29")),
                ("male_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Older Men 60+")),
                ("female_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 0-1")),
                ("female_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 2-5")),
                ("female_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 6-12")),
                ("female_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 13-17")),
                ("female_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Women 18-29")),
                ("female_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Older Women 60+")),
                ("other_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 0-1")),
                ("other_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 2-5")),
                ("other_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 6-12")),
                ("other_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 13-17")),
                ("other_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 18-29")),
                ("other_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 60+")),
                ("disabled_male_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 0-1")),
                ("disabled_male_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 2-5")),
                ("disabled_male_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 6-12")),
                ("disabled_male_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 13-17")),
                ("disabled_male_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Men 18-29")),
                (
                    "disabled_male_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Older Men 60+"),
                ),
                ("disabled_female_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 0-1")),
                ("disabled_female_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 2-5")),
                ("disabled_female_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 6-12")),
                ("disabled_female_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 13-17")),
                ("disabled_female_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Women 18-29")),
                (
                    "disabled_female_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Older Women 60+"),
                ),
                (
                    "disabled_other_0_1_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 0-1"),
                ),
                (
                    "disabled_other_2_5_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 2-5"),
                ),
                (
                    "disabled_other_6_12_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 6-12"),
                ),
                (
                    "disabled_other_13_17_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 13-17"),
                ),
                (
                    "disabled_other_18_59_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 18-29"),
                ),
                (
                    "disabled_other_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 60+"),
                ),
                (
                    "disabled_male_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Male Unknown Age"),
                ),
                (
                    "disabled_female_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Female Unknown Age"),
                ),
                (
                    "disabled_other_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Other Unknown Age"),
                ),
                ("details", models.TextField(blank=True, null=True, verbose_name="details")),
                ("supplies", models.JSONField(blank=True, default=dict, verbose_name="supplies")),
                ("custom_action", models.CharField(blank=True, max_length=255, null=True, verbose_name="custom_action")),
                ("custom_supplies", models.JSONField(blank=True, default=dict, verbose_name="custom supplies")),
                ("point_count", models.IntegerField(blank=True, null=True, verbose_name="Point Count")),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.emergencyprojectactivityaction",
                        verbose_name="action",
                    ),
                ),
                (
                    "points",
                    models.ManyToManyField(blank=True, to="deployments.emergencyprojectactivitylocation", verbose_name="Points"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="deployments.emergencyproject",
                        verbose_name="emergency project/3W",
                    ),
                ),
                (
                    "sector",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.emergencyprojectactivitysector",
                        verbose_name="sector",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="deployed_eru",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="deployments.eru",
                verbose_name="Deployed ERU",
            ),
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="districts",
            field=models.ManyToManyField(blank=True, related_name="+", to="api.district", verbose_name="Districts"),
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="+", to="api.event", verbose_name="Event"
            ),
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="modified by",
            ),
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="reporting_ns",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="api.country",
                verbose_name="Reporting national society",
            ),
        ),
        migrations.CreateModel(
            name="AnnualSplit",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("year", models.IntegerField(blank=True, null=True, verbose_name="year")),
                ("budget_amount", models.IntegerField(blank=True, null=True, verbose_name="amount")),
                ("target_male", models.IntegerField(blank=True, null=True, verbose_name="target male")),
                ("target_female", models.IntegerField(blank=True, null=True, verbose_name="target female")),
                ("target_other", models.IntegerField(blank=True, null=True, verbose_name="target other")),
                ("target_total", models.IntegerField(blank=True, null=True, verbose_name="target total")),
                ("reached_male", models.IntegerField(blank=True, null=True, verbose_name="reached male")),
                ("reached_female", models.IntegerField(blank=True, null=True, verbose_name="reached female")),
                ("reached_other", models.IntegerField(blank=True, null=True, verbose_name="reached other")),
                ("reached_total", models.IntegerField(blank=True, null=True, verbose_name="reached total")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_splits",
                        to="deployments.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Annual Split",
                "verbose_name_plural": "Annual Splits",
            },
        ),
        migrations.CreateModel(
            name="RdrtPerson",
            fields=[
                (
                    "deployedperson_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="deployments.deployedperson",
                    ),
                ),
                ("society_deployed_from", models.CharField(blank=True, max_length=100, null=True)),
                ("rdrt", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="deployments.rdrt")),
            ],
            options={
                "verbose_name": "RDRT/RIT Person",
                "verbose_name_plural": "RDRT/RIT People",
            },
            bases=("deployments.deployedperson",),
        ),
        migrations.CreateModel(
            name="Personnel",
            fields=[
                (
                    "deployedperson_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="deployments.deployedperson",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("fact", "FACT"),
                            ("heop", "HEOP"),
                            ("rdrt", "RDRT"),
                            ("ifrc", "IFRC"),
                            ("eru", "ERU HR"),
                            ("rr", "Rapid Response"),
                        ],
                        max_length=4,
                        verbose_name="type",
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=15, null=True, verbose_name="gender")),
                ("appraisal_received", models.BooleanField(default=False, verbose_name="appraisal received")),
                ("location", models.CharField(blank=True, max_length=300, null=True, verbose_name="location")),
                ("molnix_id", models.IntegerField(blank=True, null=True)),
                (
                    "molnix_status",
                    models.CharField(
                        choices=[("active", "ACTIVE"), ("hidden", "HIDDEN"), ("draft", "DRAFT"), ("deleted", "DELETED")],
                        default="active",
                        max_length=8,
                        verbose_name="molnix status",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "country_from",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personnel_deployments",
                        to="api.country",
                        verbose_name="country from",
                    ),
                ),
                (
                    "country_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personnel_deployments_to",
                        to="api.country",
                        verbose_name="country to",
                    ),
                ),
                (
                    "deployment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.personneldeployment",
                        verbose_name="deployment",
                    ),
                ),
                ("molnix_tags", models.ManyToManyField(blank=True, to="deployments.molnixtag")),
            ],
            options={
                "verbose_name": "Personnel",
                "verbose_name_plural": "Personnels",
                "ordering": ("deployment", "country_to", "country_from", "molnix_id", "deployedperson_ptr_id"),
            },
            bases=("deployments.deployedperson",),
        ),
    ]
