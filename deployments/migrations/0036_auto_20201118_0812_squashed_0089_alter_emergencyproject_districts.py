# Generated by Django 4.2.15 on 2024-09-13 15:34

import django.db.migrations.operations.special
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# deployments.migrations.0038_auto_20210820_0733
# deployments.migrations.0039_auto_20210823_1159


class Migration(migrations.Migration):

    replaces = [
        ("deployments", "0036_auto_20201118_0812"),
        ("deployments", "0037_project_modified_by"),
        ("deployments", "0038_auto_20210820_0733"),
        ("deployments", "0039_auto_20210823_1159"),
        ("deployments", "0040_auto_20210920_1250"),
        ("deployments", "0041_auto_20211110_0924"),
        ("deployments", "0042_personnel_country_to"),
        ("deployments", "0043_personnel_country_to_fill"),
        ("deployments", "0044_auto_20220305_0922"),
        ("deployments", "0045_remove_emergencyproject_country"),
        ("deployments", "0046_auto_20220307_0926"),
        ("deployments", "0047_emergencyproject_country"),
        ("deployments", "0048_auto_20220310_0524"),
        ("deployments", "0049_auto_20220311_0400"),
        ("deployments", "0050_emergencyprojectactivity_people_households"),
        ("deployments", "0051_auto_20220311_0947"),
        ("deployments", "0052_auto_20220314_0633"),
        ("deployments", "0044_personnel_molnix_status"),
        ("deployments", "0053_merge_20220314_1059"),
        ("deployments", "0054_auto_20220314_1059"),
        ("deployments", "0055_auto_20220315_0420"),
        ("deployments", "0056_auto_20220318_0413"),
        ("deployments", "0045_molnixtag_tag_category"),
        ("deployments", "0057_merge_20220318_0527"),
        ("deployments", "0058_auto_20220322_1056"),
        ("deployments", "0059_auto_20220323_1028"),
        ("deployments", "0060_auto_20220323_1527"),
        ("deployments", "0061_auto_20220331_1121"),
        ("deployments", "0062_auto_20220331_1143"),
        ("deployments", "0063_auto_20220413_1438"),
        ("deployments", "0064_auto_20220414_0842"),
        ("deployments", "0065_emergencyproject_visibility"),
        ("deployments", "0066_auto_20220727_0708"),
        ("deployments", "0066_auto_20220523_0824"),
        ("deployments", "0067_merge_0066_auto_20220523_0824_0066_auto_20220727_0708"),
        ("deployments", "0067_annualsplit"),
        ("deployments", "0068_merge_20220818_1357"),
        ("deployments", "0069_auto_20221022_1542"),
        ("deployments", "0070_alter_personnel_options"),
        ("deployments", "0071_sector"),
        ("deployments", "0072_sectortag"),
        ("deployments", "0073_auto_20230301_1606"),
        ("deployments", "0074_alter_molnixtag_description"),
        ("deployments", "0075_alter_project_primary_sector"),
        ("deployments", "0076_auto_20230309_1556"),
        ("deployments", "0077_auto_20230420_1609"),
        ("deployments", "0078_auto_20230421_1110"),
        ("deployments", "0079_auto_20230423_0628"),
        ("deployments", "0077_project_project_admin2"),
        ("deployments", "0078_emergencyproject_admin2"),
        ("deployments", "0080_merge_20230505_0418"),
        ("deployments", "0077_auto_20230410_0720"),
        ("deployments", "0081_merge_20230614_0804"),
        ("deployments", "0082_personnel_surge_alert"),
        ("deployments", "0083_auto_20230727_0853"),
        ("deployments", "0084_auto_20230731_1006"),
        ("deployments", "0085_alter_personnel_location"),
        ("deployments", "0086_auto_20230809_0822"),
        ("deployments", "0087_auto_20230816_0430"),
        ("deployments", "0088_alter_project_visibility"),
        ("deployments", "0089_alter_emergencyproject_districts"),
    ]

    dependencies = [
        ("api", "0152_countryoffieldreporttoreview"),
        ("api", "0137_auto_20220105_1533"),
        ("api", "0210_profile_accepted_montandon_license_terms"),
        ("deployments", "0035_personnel_molnix_tags"),
        ("notifications", "0013_auto_20230410_0720"),
        ("api", "0146_auto_20220228_0952"),
        ("api", "0164_appealdocumenttype"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0161_alter_event_options"),
    ]

    operations = [
        migrations.AlterField(
            model_name="deployedperson",
            name="name",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="name"),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="role",
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name="role"),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="role_ar",
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name="role"),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="role_en",
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name="role"),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="role_es",
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name="role"),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="role_fr",
            field=models.CharField(blank=True, max_length=512, null=True, verbose_name="role"),
        ),
        migrations.AddField(
            model_name="project",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="project_modified_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="modified by",
            ),
        ),
        # migrations.RunPython(
        #     code=deployments.migrations.0038_auto_20210820_0733.remove_rcce_tag,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        # migrations.RunPython(
        #     code=deployments.migrations.0039_auto_20210823_1159.remove_rcce_tag,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AlterField(
            model_name="personneldeployment",
            name="region_deployed_to",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.region", verbose_name="region deployed to"
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="visibility",
            field=models.CharField(
                choices=[
                    ("logged_in_user", "Membership"),
                    ("ifrc_only", "IFRC Only"),
                    ("public", "Public"),
                    ("ifrc_ns", "IFRC_NS"),
                ],
                default="public",
                max_length=32,
                verbose_name="visibility",
            ),
        ),
        migrations.AddField(
            model_name="personnel",
            name="country_to",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="personnel_deployments_to",
                to="api.country",
                verbose_name="country to",
            ),
        ),
        migrations.RunSQL(
            sql=[
                "update deployments_personnel set country_to_id=d.country_id from deployments_personnel a join deployments_personneldeployment b on a.deployment_id = b.id join api_event c on b.event_deployed_to_id = c.id join api_event_countries d on c.id = d.event_id join api_country e on d.country_id = e.id where deployments_personnel.deployedperson_ptr_id = a.deployedperson_ptr_id and e.record_type = 1"
            ],
            reverse_sql=["update deployments_personnel set country_to_id=NULL"],
        ),
        migrations.CreateModel(
            name="EmergencyProject",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified at")),
                (
                    "activity_lead",
                    models.CharField(
                        choices=[("national_society", "National Society"), ("deployed_eru", "Deployed ERU")],
                        max_length=30,
                        verbose_name="Activity lead",
                    ),
                ),
                (
                    "reporting_ns_contact_name",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Name"),
                ),
                (
                    "reporting_ns_contact_role",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Role"),
                ),
                (
                    "reporting_ns_contact_email",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Email"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "status",
                    models.CharField(
                        choices=[("on_going", "Ongoing"), ("complete", "Complete"), ("planned", "Planned")],
                        default="on_going",
                        max_length=40,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deployed_eru",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="deployments.eru",
                        verbose_name="Deployed ERU",
                    ),
                ),
                (
                    "districts",
                    models.ManyToManyField(
                        related_name="_emergencyproject_districts_+", to="api.district", verbose_name="Districts"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="api.event", verbose_name="Event"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="modified by",
                    ),
                ),
                (
                    "reporting_ns",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="api.country",
                        verbose_name="Reporting national society",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="api.country",
                        verbose_name="Country",
                    ),
                ),
                ("end_date", models.DateField(blank=True, null=True, verbose_name="End Date")),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("logged_in_user", "Membership"),
                            ("ifrc_only", "IFRC Only"),
                            ("public", "Public"),
                            ("ifrc_ns", "IFRC_NS"),
                        ],
                        default="public",
                        max_length=32,
                        verbose_name="visibility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityAction",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivitySector",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityActionSupply",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("order", models.SmallIntegerField(default=0)),
                (
                    "action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="supplies",
                        to="deployments.emergencyprojectactivityaction",
                        verbose_name="action",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="emergencyprojectactivityaction",
            name="sector",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="deployments.emergencyprojectactivitysector",
                verbose_name="sector",
            ),
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivityLocation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("latitude", models.FloatField(verbose_name="latitude")),
                ("longitude", models.FloatField(verbose_name="longitude")),
                ("description", models.TextField(verbose_name="location description")),
            ],
        ),
        migrations.AddField(
            model_name="emergencyprojectactivityaction",
            name="description",
            field=models.TextField(blank=True, verbose_name="Description"),
        ),
        migrations.AddField(
            model_name="personnel",
            name="molnix_status",
            field=models.CharField(
                choices=[("active", "ACTIVE"), ("hidden", "HIDDEN"), ("draft", "DRAFT"), ("deleted", "DELETED")],
                default="active",
                max_length=8,
                verbose_name="molnix status",
            ),
        ),
        migrations.AddField(
            model_name="emergencyprojectactivityaction",
            name="is_cash_type",
            field=models.BooleanField(default=False, verbose_name="is_cash_type"),
        ),
        migrations.AddField(
            model_name="emergencyprojectactivityaction",
            name="has_location",
            field=models.BooleanField(default=False, verbose_name="has location"),
        ),
        migrations.AddField(
            model_name="molnixtag",
            name="tag_category",
            field=models.CharField(max_length=127, null=True),
        ),
        migrations.AddField(
            model_name="project",
            name="reporting_ns_contact_email",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Email"),
        ),
        migrations.AddField(
            model_name="project",
            name="reporting_ns_contact_name",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Name"),
        ),
        migrations.AddField(
            model_name="project",
            name="reporting_ns_contact_role",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contanct Information: Role"),
        ),
        migrations.AddField(
            model_name="project",
            name="description",
            field=tinymce.models.HTMLField(blank=True, default="", verbose_name="description"),
        ),
        migrations.AddField(
            model_name="project",
            name="description_ar",
            field=tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description"),
        ),
        migrations.AddField(
            model_name="project",
            name="description_en",
            field=tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description"),
        ),
        migrations.AddField(
            model_name="project",
            name="description_es",
            field=tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description"),
        ),
        migrations.AddField(
            model_name="project",
            name="description_fr",
            field=tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="description"),
        ),
        migrations.AddField(
            model_name="project",
            name="document",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.generaldocument",
                verbose_name="linked document",
            ),
        ),
        migrations.AlterField(
            model_name="deployedperson",
            name="end_date",
            field=models.DateTimeField(db_index=True, null=True, verbose_name="end date"),
        ),
        migrations.CreateModel(
            name="EmergencyProjectActivity",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_simplified_report", models.BooleanField(default=True, verbose_name="is_simplified_report")),
                ("people_count", models.IntegerField(blank=True, null=True, verbose_name="People")),
                ("male_count", models.IntegerField(blank=True, null=True, verbose_name="Men")),
                ("female_count", models.IntegerField(blank=True, null=True, verbose_name="Female")),
                ("male_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 6-12")),
                ("male_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 13-17")),
                ("male_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Men 18-29")),
                ("female_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 6-12")),
                ("female_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 13-17")),
                ("female_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Women 18-29")),
                ("details", models.TextField(blank=True, null=True, verbose_name="details")),
                ("supplies", models.JSONField(default=dict, verbose_name="supplies")),
                ("custom_action", models.CharField(blank=True, max_length=255, null=True, verbose_name="custom_action")),
                ("custom_supplies", models.JSONField(default=dict, verbose_name="custom supplies")),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.emergencyprojectactivityaction",
                        verbose_name="action",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="deployments.emergencyproject",
                        verbose_name="emergency project/3W",
                    ),
                ),
                (
                    "sector",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.emergencyprojectactivitysector",
                        verbose_name="sector",
                    ),
                ),
                ("amount", models.IntegerField(blank=True, null=True, verbose_name="Amount")),
                ("household_count", models.IntegerField(blank=True, null=True, verbose_name="Household")),
                ("item_count", models.IntegerField(blank=True, null=True, verbose_name="Item")),
                ("other_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 13-17")),
                ("other_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 18-29")),
                ("other_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 6-12")),
                ("point_count", models.IntegerField(blank=True, null=True, verbose_name="Point Count")),
                (
                    "points",
                    models.ManyToManyField(blank=True, to="deployments.emergencyprojectactivitylocation", verbose_name="Points"),
                ),
                (
                    "people_households",
                    models.CharField(
                        blank=True,
                        choices=[("people", "People"), ("households", "Households")],
                        max_length=50,
                        null=True,
                        verbose_name="People Households",
                    ),
                ),
                ("beneficiaries_count", models.IntegerField(blank=True, null=True, verbose_name="Beneficiaries Count")),
                ("disabled_female_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 13-17")),
                ("disabled_female_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Women 18-29")),
                ("disabled_female_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 6-12")),
                ("disabled_male_13_17_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 13-17")),
                ("disabled_male_18_59_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Men 18-29")),
                ("disabled_male_6_12_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 6-12")),
                (
                    "disabled_other_13_17_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 13-17"),
                ),
                (
                    "disabled_other_18_59_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 18-29"),
                ),
                (
                    "disabled_other_6_12_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 6-12"),
                ),
                ("female_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Female Unknown Age")),
                (
                    "is_disaggregated_for_disabled",
                    models.BooleanField(blank=True, null=True, verbose_name="Is disaggregated for disabled"),
                ),
                ("male_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Male Unknown Age")),
                ("other_unknown_age_count", models.IntegerField(blank=True, null=True, verbose_name="Other Unknown Age")),
                ("disabled_female_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 0-1")),
                ("disabled_female_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Girls 2-5")),
                (
                    "disabled_female_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Older Women 60+"),
                ),
                ("disabled_male_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 0-1")),
                ("disabled_male_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Disabled Boys 2-5")),
                (
                    "disabled_male_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Older Men 60+"),
                ),
                (
                    "disabled_other_0_1_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 0-1"),
                ),
                (
                    "disabled_other_2_5_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 2-5"),
                ),
                (
                    "disabled_other_60_plus_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Others/Unknown 60+"),
                ),
                ("female_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 0-1")),
                ("female_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Girls 2-5")),
                ("female_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Older Women 60+")),
                ("male_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 0-1")),
                ("male_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Boys 2-5")),
                ("male_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Older Men 60+")),
                ("other_0_1_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 0-1")),
                ("other_2_5_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 2-5")),
                ("other_60_plus_count", models.IntegerField(blank=True, null=True, verbose_name="Others/Unknown 60+")),
                (
                    "has_no_data_on_people_reached",
                    models.BooleanField(blank=True, null=True, verbose_name="Has no data on people reached"),
                ),
                (
                    "disabled_female_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Female Unknown Age"),
                ),
                (
                    "disabled_male_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Male Unknown Age"),
                ),
                (
                    "disabled_other_unknown_age_count",
                    models.IntegerField(blank=True, null=True, verbose_name="Disabled Other Unknown Age"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnnualSplit",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("year", models.IntegerField(blank=True, null=True, verbose_name="year")),
                ("budget_amount", models.IntegerField(blank=True, null=True, verbose_name="amount")),
                ("target_male", models.IntegerField(blank=True, null=True, verbose_name="target male")),
                ("target_female", models.IntegerField(blank=True, null=True, verbose_name="target female")),
                ("target_other", models.IntegerField(blank=True, null=True, verbose_name="target other")),
                ("target_total", models.IntegerField(blank=True, null=True, verbose_name="target total")),
                ("reached_male", models.IntegerField(blank=True, null=True, verbose_name="reached male")),
                ("reached_female", models.IntegerField(blank=True, null=True, verbose_name="reached female")),
                ("reached_other", models.IntegerField(blank=True, null=True, verbose_name="reached other")),
                ("reached_total", models.IntegerField(blank=True, null=True, verbose_name="reached total")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_splits",
                        to="deployments.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Annual Split",
                "verbose_name_plural": "Annual Splits",
            },
        ),
        migrations.AlterField(
            model_name="eru",
            name="type",
            field=models.IntegerField(
                choices=[
                    (0, "Basecamp"),
                    (1, "IT & Telecom"),
                    (2, "Logistics"),
                    (3, "RCRC Emergency Hospital"),
                    (4, "RCRC Emergency Clinic"),
                    (5, "Relief"),
                    (6, "Wash M15"),
                    (7, "Wash MSM20"),
                    (8, "Wash M40"),
                    (9, "Water Supply and rehabilitation"),
                    (10, "Household Water Treatment and safe storage"),
                    (11, "Cholera Case management at Community level"),
                    (12, "Safe and Dignified Burials"),
                    (13, "Community Based Surveillance"),
                    (14, "Base Camp – S"),
                    (15, "Base Camp – M"),
                    (16, "Base Camp – L"),
                ],
                default=0,
                help_text='<a target="_blank" href="/api/v2/erutype">Key/value pairs</a>',
                verbose_name="type",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="operation_type",
            field=models.IntegerField(
                choices=[(0, "Programme"), (1, "Emergency Operation")],
                default=0,
                help_text='<a target="_blank" href="/api/v2/operationtype">Key/value pairs</a>',
                verbose_name="operation type",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="primary_sector",
            field=models.IntegerField(
                choices=[
                    (0, "WASH"),
                    (1, "PGI"),
                    (2, "CEA"),
                    (3, "Migration"),
                    (4, "Health"),
                    (5, "DRR"),
                    (6, "Shelter"),
                    (7, "NS Strengthening"),
                    (8, "Education"),
                    (9, "Livelihoods and basic needs"),
                ],
                default=0,
                help_text='<a target="_blank" href="/api/v2/primarysector">Key/value pairs</a>',
                verbose_name="sector",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="programme_type",
            field=models.IntegerField(
                choices=[(0, "Bilateral"), (1, "Multilateral"), (2, "Domestic")],
                default=0,
                help_text='<a target="_blank" href="/api/v2/programmetype">Key/value pairs</a>',
                verbose_name="programme type",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="status",
            field=models.IntegerField(
                choices=[(0, "Planned"), (1, "Ongoing"), (2, "Completed")],
                default=0,
                help_text='<a target="_blank" href="/api/v2/projectstatus">Key/value pairs</a>',
                verbose_name="status",
            ),
        ),
        migrations.AlterModelOptions(
            name="personnel",
            options={
                "ordering": ("deployment", "country_to", "country_from", "molnix_id", "deployedperson_ptr_id"),
                "verbose_name": "Personnel",
                "verbose_name_plural": "Personnels",
            },
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("slug", models.CharField(max_length=255, verbose_name="slug")),
                ("order", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="SectorTag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("slug", models.CharField(max_length=255, verbose_name="slug")),
                ("order", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.RunSQL(
            sql=[
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (0 ,0 ,'WASH', 'WASH')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (1 ,1 ,'PGI', 'PGI')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (2 ,2 ,'CEA' , 'CEA')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (3 ,3 ,'MIGRATION', 'Migration')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (4 ,4 ,'HEALTH_PUBLIC' , 'Health (public)')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (5 ,5 ,'DRR', 'DRR')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (6 ,6 ,'SHELTER' ,'Shelter')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (7 ,7 ,'NS_STRENGTHENING' , 'NS Strengthening')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (8 ,8 ,'EDUCATION' , 'Education')",
                "INSERT INTO deployments_sector   (id, \"order\", slug, title) values (9 ,9 ,'LIVELIHOODS_AND_BASIC_NEEDS', 'Livelihoods and basic needs')",
                "SELECT SETVAL('deployments_sector_id_seq', (select max(id) from deployments_sector))",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (0 ,0 ,'WASH', 'WASH')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (1 ,1 ,'PGI', 'PGI')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (2 ,2 ,'CEA' , 'CEA')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (3 ,3 ,'MIGRATION', 'Migration')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (4 ,4 ,'HEALTH_PUBLIC' , 'Health (public)')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (5 ,5 ,'DRR', 'DRR')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (6 ,6 ,'SHELTER' ,'Shelter')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (7 ,7 ,'NS_STRENGTHENING' , 'NS Strengthening')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (8 ,8 ,'EDUCATION' , 'Education')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (9 ,9 ,'LIVELIHOODS_AND_BASIC_NEEDS', 'Livelihoods and basic needs')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (10,10,'RECOVERY', 'Recovery')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (11,11,'INTERNAL_DISPLACEMENT', 'Internal displacement')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (12,12,'HEALTH_CLINICAL' , 'Health (clinical)')",
                "INSERT INTO deployments_sectortag(id, \"order\", slug, title) values (13,13,'COVID_19' , 'COVID-19')",
                "SELECT SETVAL('deployments_sectortag_id_seq', (select max(id) from deployments_sectortag))",
                "CREATE TABLE tmp2sect as select id, secondary_sectors from deployments_project",
            ],
            reverse_sql=["DELETE FROM deployments_sector", "DELETE FROM deployments_sectortag", "DROP TABLE tmp2sect"],
        ),
        migrations.AlterField(
            model_name="project",
            name="primary_sector",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="deployments.sector", verbose_name="sector"),
        ),
        migrations.RemoveField(
            model_name="project",
            name="secondary_sectors",
        ),
        migrations.AddField(
            model_name="project",
            name="secondary_sectors",
            field=models.ManyToManyField(blank=True, related_name="tags", to="deployments.sectortag"),
        ),
        migrations.AlterModelOptions(
            name="sector",
            options={"verbose_name": "Project Sector", "verbose_name_plural": "Project Sectors"},
        ),
        migrations.AlterModelOptions(
            name="sectortag",
            options={"verbose_name": "Project Sector Tag", "verbose_name_plural": "Project Sector Tags"},
        ),
        migrations.RunSQL(
            sql=[
                "INSERT INTO deployments_project_secondary_sectors (project_id,sectortag_id) (select distinct id, unnest(secondary_sectors) FROM tmp2sect)",
                "DROP TABLE tmp2sect",
            ],
            reverse_sql=["DELETE FROM deployments_project_secondary_sectors"],
        ),
        migrations.AlterField(
            model_name="molnixtag",
            name="description",
            field=models.CharField(blank=True, max_length=512),
        ),
        migrations.AlterField(
            model_name="project",
            name="primary_sector",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="deployments.sector", verbose_name="sector"),
        ),
        migrations.RemoveField(
            model_name="sector",
            name="slug",
        ),
        migrations.RemoveField(
            model_name="sectortag",
            name="slug",
        ),
        migrations.AddField(
            model_name="sector",
            name="color",
            field=models.CharField(blank=True, max_length=7, null=True, verbose_name="color"),
        ),
        migrations.AddField(
            model_name="sector",
            name="is_deprecated",
            field=models.BooleanField(default=False, help_text="Is this a deprecated sector?"),
        ),
        migrations.AddField(
            model_name="sectortag",
            name="color",
            field=models.CharField(blank=True, max_length=7, null=True, verbose_name="color"),
        ),
        migrations.AddField(
            model_name="sectortag",
            name="is_deprecated",
            field=models.BooleanField(default=False, help_text="Is this a deprecated sector tag?"),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="districts",
            field=models.ManyToManyField(
                blank=True, related_name="_deployments_emergencyproject_districts_+", to="api.district", verbose_name="Districts"
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="project_districts",
            field=models.ManyToManyField(blank=True, to="api.district", verbose_name="districts"),
        ),
        migrations.AlterField(
            model_name="emergencyprojectactivity",
            name="custom_supplies",
            field=models.JSONField(blank=True, default=dict, null=True, verbose_name="custom supplies"),
        ),
        migrations.AlterField(
            model_name="emergencyprojectactivity",
            name="supplies",
            field=models.JSONField(blank=True, default=dict, null=True, verbose_name="supplies"),
        ),
        migrations.AlterField(
            model_name="eru",
            name="type",
            field=models.IntegerField(
                choices=[
                    (0, "Basecamp"),
                    (1, "IT & Telecom"),
                    (2, "Logistics"),
                    (3, "RCRC Emergency Hospital"),
                    (4, "RCRC Emergency Clinic"),
                    (5, "Relief"),
                    (6, "Wash M15"),
                    (7, "Wash MSM20"),
                    (8, "Wash M40"),
                    (9, "Water Supply and rehabilitation"),
                    (10, "Household Water Treatment and safe storage"),
                    (11, "Cholera Case management at Community level"),
                    (12, "Safe and Dignified Burials"),
                    (13, "Community Based Surveillance"),
                    (14, "Base Camp – S"),
                    (15, "Base Camp – M"),
                    (16, "Base Camp – L"),
                    (17, "Outpatient Department (OPD) Module"),
                    (18, "MHPSS"),
                ],
                default=0,
                help_text='<a target="_blank" href="/api/v2/erutype">Key/value pairs</a>',
                verbose_name="type",
            ),
        ),
        migrations.AlterField(
            model_name="emergencyprojectactivity",
            name="custom_supplies",
            field=models.JSONField(blank=True, default=dict, verbose_name="custom supplies"),
        ),
        migrations.AlterField(
            model_name="emergencyprojectactivity",
            name="supplies",
            field=models.JSONField(blank=True, default=dict, verbose_name="supplies"),
        ),
        migrations.AddField(
            model_name="project",
            name="project_admin2",
            field=models.ManyToManyField(blank=True, to="api.admin2", verbose_name="admin2"),
        ),
        migrations.AddField(
            model_name="emergencyproject",
            name="admin2",
            field=models.ManyToManyField(blank=True, to="api.admin2", verbose_name="admin2"),
        ),
        migrations.AddField(
            model_name="deployedperson",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="deployedperson",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="partnersocietyactivities",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="partnersocietyactivities",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="personneldeployment",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="personneldeployment",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="regionalproject",
            name="translation_module_original_language",
            field=models.CharField(
                choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                default="en",
                help_text="Language used to create this entity",
                max_length=2,
                verbose_name="Entity Original language",
            ),
        ),
        migrations.AddField(
            model_name="regionalproject",
            name="translation_module_skip_auto_translation",
            field=models.BooleanField(
                default=False, help_text="Skip auto translation operation for this entity?", verbose_name="Skip auto translation"
            ),
        ),
        migrations.AddField(
            model_name="personnel",
            name="surge_alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="notifications.surgealert",
                verbose_name="surge alert",
            ),
        ),
        migrations.CreateModel(
            name="MolnixTagGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("molnix_id", models.IntegerField()),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("is_deprecated", models.BooleanField(default=False, help_text="Is this a deprecated group?")),
            ],
            options={
                "verbose_name": "Molnix Tag Group",
                "verbose_name_plural": "Molnix Tag Groups",
            },
        ),
        migrations.AddField(
            model_name="molnixtag",
            name="groups",
            field=models.ManyToManyField(blank=True, related_name="groups", to="deployments.molnixtaggroup"),
        ),
        migrations.AddField(
            model_name="personnel",
            name="location",
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name="location"),
        ),
        migrations.AddField(
            model_name="personnel",
            name="appraisal_received",
            field=models.BooleanField(default=False, verbose_name="appraisal received"),
        ),
        migrations.AddField(
            model_name="personnel",
            name="gender",
            field=models.CharField(blank=True, max_length=15, null=True, verbose_name="gender"),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="reporting_ns_contact_email",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Email"),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="reporting_ns_contact_name",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Name"),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="reporting_ns_contact_role",
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name="NS Contact Information: Role"),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="visibility",
            field=models.CharField(
                choices=[
                    ("logged_in_user", "RCRC Movement"),
                    ("ifrc_only", "IFRC Secretariat"),
                    ("public", "Public"),
                    ("ifrc_ns", "IFRC and NS"),
                ],
                default="public",
                max_length=32,
                verbose_name="visibility",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="visibility",
            field=models.CharField(
                choices=[
                    ("logged_in_user", "RCRC Movement"),
                    ("ifrc_only", "IFRC Secretariat"),
                    ("public", "Public"),
                    ("ifrc_ns", "IFRC and NS"),
                ],
                default="public",
                max_length=32,
                verbose_name="visibility",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="visibility",
            field=models.CharField(
                choices=[
                    ("logged_in_user", "RCRC Movement"),
                    ("ifrc_only", "IFRC Secretariat"),
                    ("public", "Public"),
                    ("ifrc_ns", "IFRC and NS"),
                ],
                default="public",
                max_length=64,
                verbose_name="visibility",
            ),
        ),
        migrations.AlterField(
            model_name="emergencyproject",
            name="districts",
            field=models.ManyToManyField(blank=True, related_name="+", to="api.district", verbose_name="Districts"),
        ),
    ]
