version: '2'

services:
  base_django_setup: &base_django_setup
    image: ifrcgo/go-api:latest
    environment:
      DJANGO_DB_NAME: test
      DJANGO_SECRET_KEY: test
      DJANGO_DB_HOST: db
      DJANGO_DB_USER: test
      DJANGO_DB_PASS: test
      FRONTEND_URL: $FRONTEND_URL
      FDRS_CREDENTIAL: $FDRS_CREDENTIAL
      HPC_CREDENTIAL: $HPC_CREDENTIAL
      AWS_TRANSLATE_ACCESS_KEY: $AWS_TRANSLATE_ACCESS_KEY
      AWS_TRANSLATE_SECRET_KEY: $AWS_TRANSLATE_SECRET_KEY
      AWS_TRANSLATE_REGION: $AWS_TRANSLATE_REGION
    volumes:
      - '.:/home/ifrc/go-api'
    depends_on:
      - db
      - redis
    links:
      - db
      - redis

  base:
    build: .
    image: ifrcgo/go-api:latest

  db:
    image: mdillon/postgis:9.6-alpine
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    volumes:
      - './.tmp/pg:/var/lib/postgresql/data'

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data

  serve:
    <<: *base_django_setup
    ports:
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000

  # For development only
  celery:
    <<: *base_django_setup
    command: python manage.py run_celery_dev

  bash:
    <<: *base_django_setup
    entrypoint: /bin/bash

  shell:
    <<: *base_django_setup
    command: python manage.py shell

  loaddata:
    <<: *base_django_setup
    command: python manage.py loaddata Regions Countries Districts DisasterTypes Actions Groups

  ingest_databank:
    <<: *base_django_setup
    command: python manage.py ingest_databank

  collectstatic:
    <<: *base_django_setup
    command: python manage.py collectstatic --noinput -l

  createsuperuser:
    <<: *base_django_setup
    command: python manage.py createsuperuser

  ingest_appeals:
    <<: *base_django_setup
    command: python manage.py ingest_appeals

  ingest_appeal_docs:
    <<: *base_django_setup
    command: python manage.py ingest_appeal_docs

  ingest_appeal_docs_fullscan:
    <<: *base_django_setup
    command: python manage.py ingest_appeal_docs --fullscan

  ingest_mdb:
    <<: *base_django_setup
    command: python manage.py ingest_mdb

  migrate:
    <<: *base_django_setup
    command: python manage.py migrate

  makemigrations:
    <<: *base_django_setup
    command: python manage.py makemigrations

  makemigrations_merge:
    <<: *base_django_setup
    command: python manage.py makemigrations --merge

  make_permissions:
    <<: *base_django_setup
    command: python manage.py make_permissions

  test:
    <<: *base_django_setup
    command: python manage.py test

  test_snapshot_update:
    <<: *base_django_setup
    command: python manage.py test --snapshot-update

  coverage:
    <<: *base_django_setup
    command: coverage run --source='.' manage.py test

  coverage_report:
    <<: *base_django_setup
    command: coverage report

  coverage_html:
    <<: *base_django_setup
    command: coverage html

  triggers_to_db:
    <<: *base_django_setup
    command: python manage.py triggers_to_db

volumes:
  redis-data:
