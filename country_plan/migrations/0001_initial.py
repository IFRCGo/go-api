# Generated by Django 3.2.16 on 2022-11-16 11:15

import country_plan.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0160_merge_0159_auto_20221022_1542_0159_auto_20221028_0940'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryPlanBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_import_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_import_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
        ),
        migrations.CreateModel(
            name='CountryPlan',
            fields=[
                ('countryplanbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='country_plan.countryplanbase')),
                ('internal_plan_file', models.FileField(upload_to=country_plan.models.pdf_upload_to, verbose_name='Internal Plan')),
                ('public_plan_file', models.FileField(upload_to=country_plan.models.pdf_upload_to, verbose_name='Country Plan')),
                ('requested_amount', models.IntegerField(blank=True, null=True, verbose_name='Requested Amount')),
                ('people_targeted', models.IntegerField(blank=True, null=True, verbose_name='People Targeted')),
                ('situation_analysis', models.TextField(blank=True, verbose_name='Situation Analysis')),
                ('role_of_national_society', models.TextField(blank=True, verbose_name='Role of National Society')),
                ('is_publish', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.country')),
            ],
            bases=('country_plan.countryplanbase',),
        ),
        migrations.CreateModel(
            name='DataImport',
            fields=[
                ('countryplanbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='country_plan.countryplanbase')),
                ('file', models.FileField(upload_to=country_plan.models.file_upload_to, verbose_name='EXEL file')),
            ],
            bases=('country_plan.countryplanbase',),
        ),
        migrations.CreateModel(
            name='StrategicPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sp_name', models.CharField(blank=True, choices=[('sp_1', 'Climate and environmental crisis'), ('sp_2', 'Evolving crisis and disasters'), ('sp_3', 'Growing gaps in health and wellbeing'), ('sp_4', 'Migration and Identity'), ('sp_5', 'Value power and inclusion')], max_length=100, null=True, verbose_name='share with')),
                ('funding_requirement', models.IntegerField(blank=True, null=True, verbose_name='Funding Requirement')),
                ('people_targeted', models.IntegerField(blank=True, null=True, verbose_name='People Targeted')),
                ('country_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_plan_sp', to='country_plan.countryplan', verbose_name='Country Plan')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipCoordination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategic_priority', models.CharField(blank=True, choices=[('sp_1', 'SP1'), ('sp_2', 'SP2'), ('sp_3', 'SP3'), ('sp_4', 'SP4'), ('sp_5', 'SP5'), ('ea_1', 'EA1'), ('ea_2', 'EA2'), ('ea_3', 'EA3')], max_length=100, null=True, verbose_name='share with')),
                ('has_coordination', models.BooleanField(default=False)),
                ('national_society', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.country')),
                ('country_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_plan.countryplan')),
            ],
        ),
    ]
