# Generated by Django 4.2.16 on 2024-10-08 07:30

import django.contrib.postgres.fields
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("api", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DonorGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="name")),
            ],
        ),
        migrations.CreateModel(
            name="Donors",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("organization_name", models.CharField(blank=True, max_length=500, null=True)),
                ("first_name", models.CharField(blank=True, max_length=300, null=True)),
                ("last_name", models.CharField(blank=True, max_length=300, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("position", models.CharField(blank=True, max_length=300, null=True)),
                ("groups", models.ManyToManyField(blank=True, to="flash_update.donorgroup", verbose_name="donor group")),
            ],
            options={
                "verbose_name": "donor",
            },
        ),
        migrations.CreateModel(
            name="FlashAction",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=400, verbose_name="name")),
                (
                    "organizations",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("NTLS", "National Society"),
                                ("PNS", "RCRC"),
                                ("FDRN", "Federation"),
                                ("GOV", "Government"),
                            ],
                            max_length=4,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="organizations",
                    ),
                ),
                (
                    "flash_update_types",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("EVT", "Event"), ("EW", "Early Warning"), ("EPI", "Epidemic"), ("COVID", "COVID-19")],
                            max_length=16,
                        ),
                        default=list,
                        size=None,
                        verbose_name="flash update types",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("General", "General"),
                            ("Health", "Health"),
                            ("NS Institutional Strengthening", "NS Institutional Strengthening"),
                            ("Socioeconomic Interventions", "Socioeconomic Interventions"),
                        ],
                        default="General",
                        max_length=255,
                        verbose_name="category",
                    ),
                ),
                ("is_disabled", models.BooleanField(default=False, help_text="Disable in form", verbose_name="is disabled?")),
                ("tooltip_text", models.TextField(blank="true", null=True, verbose_name="tooltip text")),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "verbose_name": "flash action",
                "verbose_name_plural": "flash actions",
            },
        ),
        migrations.CreateModel(
            name="FlashGraphicMap",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="flash_update/images/", verbose_name="file")),
                ("caption", models.CharField(blank=True, max_length=225, null=True)),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created_by",
                    ),
                ),
            ],
            options={
                "verbose_name": "flash graphic map",
                "verbose_name_plural": "flash graphic maps",
            },
        ),
        migrations.CreateModel(
            name="FlashReferences",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(blank=True, verbose_name="date")),
                ("source_description", models.CharField(blank=True, max_length=225, verbose_name="Name or Source Description")),
                ("url", models.TextField(blank=True)),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flash_document",
                        to="flash_update.flashgraphicmap",
                        verbose_name="document",
                    ),
                ),
            ],
            options={
                "verbose_name": "flash reference",
                "verbose_name_plural": "flash references",
            },
        ),
        migrations.CreateModel(
            name="FlashUpdate",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("title", models.CharField(max_length=300)),
                ("title_en", models.CharField(max_length=300, null=True)),
                ("title_es", models.CharField(max_length=300, null=True)),
                ("title_fr", models.CharField(max_length=300, null=True)),
                ("title_ar", models.CharField(max_length=300, null=True)),
                ("situational_overview", tinymce.models.HTMLField(blank=True, default="", verbose_name="Situational Overview")),
                (
                    "situational_overview_en",
                    tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="Situational Overview"),
                ),
                (
                    "situational_overview_es",
                    tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="Situational Overview"),
                ),
                (
                    "situational_overview_fr",
                    tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="Situational Overview"),
                ),
                (
                    "situational_overview_ar",
                    tinymce.models.HTMLField(blank=True, default="", null=True, verbose_name="Situational Overview"),
                ),
                ("originator_name", models.CharField(blank=True, max_length=100, null=True, verbose_name="originator_name")),
                ("originator_title", models.CharField(blank=True, max_length=300, null=True, verbose_name="originator_title")),
                ("originator_email", models.CharField(blank=True, max_length=300, null=True, verbose_name="originator_email")),
                ("originator_phone", models.CharField(blank=True, max_length=50, null=True, verbose_name="originator_phone")),
                ("ifrc_name", models.CharField(blank=True, max_length=100, null=True, verbose_name="ifrc_name")),
                ("ifrc_title", models.CharField(blank=True, max_length=300, null=True, verbose_name="ifrc_title")),
                ("ifrc_email", models.CharField(blank=True, max_length=300, null=True, verbose_name="ifrc_email")),
                ("ifrc_phone", models.CharField(blank=True, max_length=50, null=True, verbose_name="ifrc_phone")),
                (
                    "share_with",
                    models.CharField(
                        blank=True,
                        choices=[("ifrc_secretariat", "IFRC Secretariat")],
                        default="ifrc_secretariat",
                        max_length=50,
                        null=True,
                        verbose_name="share with",
                    ),
                ),
                (
                    "extracted_file",
                    models.FileField(blank=True, null=True, upload_to="flash_update/pdf/", verbose_name="extracted file"),
                ),
                ("extracted_at", models.DateTimeField(blank=True, null=True, verbose_name="extracted at")),
                (
                    "translation_module_original_language",
                    models.CharField(
                        choices=[("en", "English"), ("es", "Spanish"), ("fr", "French"), ("ar", "Arabic")],
                        default="en",
                        help_text="Language used to create this entity",
                        max_length=2,
                        verbose_name="Entity Original language",
                    ),
                ),
                (
                    "translation_module_skip_auto_translation",
                    models.BooleanField(
                        default=False,
                        help_text="Skip auto translation operation for this entity?",
                        verbose_name="Skip auto translation",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flash_update_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "graphics",
                    models.ManyToManyField(
                        blank=True, related_name="flash_graphics", to="flash_update.flashgraphicmap", verbose_name="graphics"
                    ),
                ),
                (
                    "hazard_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flash_update_hazard_type",
                        to="api.disastertype",
                        verbose_name="hazard type",
                    ),
                ),
                (
                    "map",
                    models.ManyToManyField(
                        blank=True, related_name="flash_map", to="flash_update.flashgraphicmap", verbose_name="map"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="flash_update_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="modified by",
                    ),
                ),
                ("references", models.ManyToManyField(blank=True, to="flash_update.flashreferences", verbose_name="references")),
            ],
            options={
                "verbose_name": "Flash update",
                "verbose_name_plural": "Flash updates",
            },
        ),
        migrations.CreateModel(
            name="FlashUpdateShare",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("donor_groups", models.ManyToManyField(blank=True, to="flash_update.donorgroup")),
                ("donors", models.ManyToManyField(blank=True, to="flash_update.donors")),
                (
                    "flash_update",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flash_update_share",
                        to="flash_update.flashupdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlashEmailSubscriptions",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "share_with",
                    models.CharField(
                        choices=[("ifrc_secretariat", "IFRC Secretariat")],
                        default="ifrc_secretariat",
                        max_length=50,
                        verbose_name="share with",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flash_email_subscription",
                        to="auth.group",
                    ),
                ),
            ],
            options={
                "verbose_name": "flash email subscription",
            },
        ),
        migrations.CreateModel(
            name="FlashActionsTaken",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "organization",
                    models.CharField(
                        choices=[("NTLS", "National Society"), ("PNS", "RCRC"), ("FDRN", "Federation"), ("GOV", "Government")],
                        max_length=16,
                        verbose_name="organization",
                    ),
                ),
                ("summary", models.TextField(blank=True, null=True, verbose_name="summary")),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                ("actions", models.ManyToManyField(blank=True, to="flash_update.flashaction", verbose_name="actions")),
                (
                    "flash_update",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions_taken_flash",
                        to="flash_update.flashupdate",
                        verbose_name="flash update",
                    ),
                ),
            ],
            options={
                "verbose_name": "actions taken flash",
                "verbose_name_plural": "all actions taken flash",
            },
        ),
        migrations.CreateModel(
            name="FlashCountryDistrict",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("client_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flash_country",
                        to="api.country",
                        verbose_name="country",
                    ),
                ),
                (
                    "district",
                    models.ManyToManyField(blank=True, related_name="flash_district", to="api.district", verbose_name="district"),
                ),
                (
                    "flash_update",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flash_country_district",
                        to="flash_update.flashupdate",
                        verbose_name="Flash update",
                    ),
                ),
            ],
            options={
                "verbose_name": "flash country district",
                "verbose_name_plural": "flash countries districts",
                "unique_together": {("flash_update", "country")},
            },
        ),
    ]
