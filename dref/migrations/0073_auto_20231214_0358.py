# Generated by Django 3.2.23 on 2023-12-14 03:58
from django.db import migrations

class Migration(migrations.Migration):

    def update_dref_sectors(apps, schema_editor):
        NationalSocietyAction = apps.get_model('dref', 'NationalSocietyAction')
        IdentifiedNeed = apps.get_model('dref', 'IdentifiedNeed')
        PlannedIntervention = apps.get_model('dref', 'PlannedIntervention')

        # update the sector key
        for old_value, new_value in [
            ('multi-purpose_cash', 'multi_purpose_cash'),
            ('community_engagement_and _accountability', 'community_engagement_and_accountability'),
            ('migration', 'migration_and_displacement'),
        ]:
            NationalSocietyAction.objects.filter(title=old_value).update(title=new_value)

        for old_value, new_value in [
            ('migration', 'migration_and_displacement'),
            ('community_engagement_and _accountability', 'community_engagement_and_accountability'),
            ('environment_sustainability ', 'environment_sustainability'),
        ]:
            IdentifiedNeed.objects.filter(title=old_value).update(title=new_value)

        for old_value, new_value in [
            ('migration', 'migration_and_displacement'),
            ('risk_reduction_climate_adaptation_and_recovery_', 'risk_reduction_climate_adaptation_and_recovery'),
            ('multi-purpose_cash', 'multi_purpose_cash'),
        ]:
            PlannedIntervention.objects.filter(title=old_value).update(title=new_value)

        # Removing IdentifiedNeed.SHELTER_CLUSTER_COORDINATION
        print(IdentifiedNeed.objects.filter(title='shelter_cluster_coordination').delete())

    dependencies = [
        ('dref', '0072_auto_20231117_0602_squashed_0077_auto_20231211_0426'),
    ]

    operations = [
        migrations.RunPython(
            update_dref_sectors,
            reverse_code=migrations.RunPython.noop
        ),
    ]